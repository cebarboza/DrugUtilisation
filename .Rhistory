imputeDuration = "eliminate",
imputeDailyDose = "eliminate",
durationRange = c(1, Inf),
dailyDoseRange = c(0, Inf)
))
value_cohort_1 <- c(
61, 0, 0, 61, 3, 5, 1, 1, 0, 0, 2, 1, 1, 10, 41 * 10 + 52 * 20 + 30, 41 + 52 + 1, 61,
0, 3, 0, 0,
41 * 10 + 52 * 20 + 1 * 30, 0, 0
)
xx <- x %>%
dplyr::collect() %>%
dplyr::filter(
subject_id == 1 & cohort_start_date == as.Date("2000-01-01")
)
for (k in 1:length(value_cohort_1)) {
expect_true(xx[[variables[k]]] == value_cohort_1[k])
}
})
targetCohortName <- dplyr::tibble(
cohort_definition_id = c(1, 1, 1, 2),
subject_id = c(1, 1, 2, 3),
cohort_start_date = as.Date(c(
"2020-01-01", "2020-06-01", "2020-01-02", "2020-01-01"
)),
cohort_end_date = as.Date(c(
"2020-04-01", "2020-08-01", "2020-02-02", "2020-03-01"
))
)
indicationCohortName <- dplyr::tibble(
cohort_definition_id = c(1, 1, 2, 3, 1),
subject_id = c(1, 3, 1, 2, 1),
cohort_start_date = as.Date(
c(
"2019-12-30",
"2020-01-01",
"2020-05-25",
"2020-01-01",
"2020-05-25"
)
),
cohort_end_date = as.Date(
c(
"2019-12-30",
"2020-01-01",
"2020-05-25",
"2020-01-01",
"2020-05-25"
)
)
)
attr(indicationCohortName, "cohort_set") <- dplyr::tibble(
cohort_definition_id = c(1, 2),
cohort_name = c("asthma", "covid")
)
condition_occurrence <- dplyr::tibble(
person_id = 1,
condition_start_date = as.Date("2020-05-31"),
condition_end_date = as.Date("2020-05-31")
)
cdm <-
mockDrugUtilisation(
connectionDetails,
cohort1 = targetCohortName,
cohort2 = indicationCohortName,
condition_occurrence = condition_occurrence
)
# check for indication 0
res0 <- cdm$cohort1 %>%
addIndication(
cdm = cdm, indicationCohortName = "cohort2", indicationGap = 0,
unknownIndicationTable = NULL
)
res0
devtools::load_all()
# check for indication 0
res0 <- cdm$cohort1 %>%
addIndication(
cdm = cdm, indicationCohortName = "cohort2", indicationGap = 0,
unknownIndicationTable = NULL
)
indicationCohortName = "cohort2"
x <- cdm$cohort1
x
indicationGap = 0
unknownIndicationTable = NULL
# check inputs
checkInputs(
x = x, cdm = cdm, indicationCohortName = indicationCohortName,
indicationGap = indicationGap, indicationDate = indicationDate,
unknownIndicationTable = unknownIndicationTable
)
indicationDate = "cohort_start_date"
# check inputs
checkInputs(
x = x, cdm = cdm, indicationCohortName = indicationCohortName,
indicationGap = indicationGap, indicationDate = indicationDate,
unknownIndicationTable = unknownIndicationTable
)
# sort indicationGap
indicationGap <- sort(unique(indicationGap))
# select to interest individuals
ind <- x %>%
dplyr::select(
"subject_id", "cohort_start_date" = dplyr::all_of(indicationDate)
) %>%
dplyr::distinct()
# add indications that are cohorts
ind <- addCohortIndication(ind, cdm, indicationCohortName, indicationGap)
ind
cdm
indicationCohortName
indicationGap
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
)
cohortName <- indicationCohortName
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
)
gap <- 0
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
)
indicationName(gap, "none")
indicationName(gap)
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>%
dplyr::mutate(!!indicationName(gap, "none") := dplyr::if_else(
rowSums(dplyr::across(dplyr::starts_with(indicationName(gap)))) > 0,
0, 1
))
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>%
dplyr::mutate(a = dplyr::if_else(
rowSums(dplyr::across(dplyr::starts_with(indicationName(gap)))) > 0,
0, 1
))
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>%
dplyr::mutate(!!indicationName(gap, "none") := dplyr::if_else(
rowSums(dplyr::select(., dplyr::starts_with(indicationName(gap)))) > 0,
0, 1
))
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>%
dplyr::mutate(!!indicationName(gap, "none") := rowSums(dplyr::select(., dplyr::starts_with(indicationName(gap)))))
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>%
dplyr::mutate(!!indicationName(gap, "none") := rowSums(dplyr::select(., dplyr::starts_with(indicationName(gap))))) %>% show_query()
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>%
dplyr::mutate(!!indicationName(gap, "none") := rowSums(dplyr::select(., dplyr::starts_with(indicationName(gap))))) %>% dplyr::show_query()
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>% #!!indicationName(gap, "none") #indicationName(gap)
dplyr::mutate( x = rowSums(. %>% dplyr::select(dplyr::starts_with("indication")), na.rm = TRUE))
ind
xx <- PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>% collect()
xx <- PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>% dplyr::collect()
xx
xx %>%
select(-"cohort_start_date") %>%
mutate(sum = rowSums(., na.rm=TRUE))
xx %>%
dplyr::select(-"cohort_start_date") %>%
dplyr::mutate(sum = rowSums(., na.rm=TRUE))
xx %>%
dplyr::mutate(x = rowSums(. %>% dplyr::select(dplyr::starts_with("indication")), na.rm = TRUE))
xx %>%
dplyr::mutate(x = rowSums(dplyr::select(., dplyr::starts_with("indication")), na.rm = TRUE))
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>% #!!indicationName(gap, "none") #indicationName(gap)
dplyr::mutate(x = rowSums(dplyr::select(., dplyr::starts_with("indication")), na.rm = TRUE))
xx
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
)
ind
cdm$cohort1
attributes(cdm$cohort1)
columns <- c("a", "bada")
paste0(".data$", columns, collapse = " + ")
parse_quosure
rlang::parse_quosur
parse_expr
rlang::parse_expr()
devtools::load_all()
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
)
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>%
addNoneIndication(gap)
devtools::load_all()
PatientProfiles::addCohortIntersectFlag(
ind, cdm, cohortName, targetEndDate = NULL, window = c(-gap, 0),
nameStyle = indicationName(gap, "{cohort_name}")
) %>%
addNoneIndication(gap)
x
# sort indicationGap
indicationGap <- sort(unique(indicationGap))
# select to interest individuals
ind <- x %>%
dplyr::select(
"subject_id", "cohort_start_date" = dplyr::all_of(indicationDate)
) %>%
dplyr::distinct()
# add indications that are cohorts
ind <- addCohortIndication(ind, cdm, indicationCohortName, indicationGap)
devtools::load_all()
# select to interest individuals
ind <- x %>%
dplyr::select(
"subject_id", "cohort_start_date" = dplyr::all_of(indicationDate)
) %>%
dplyr::distinct()
# add indications that are cohorts
ind <- addCohortIndication(ind, cdm, indicationCohortName, indicationGap)
ind
# add unknown indications
ind <- addUnknownIndication(ind, cdm, unknownIndicationTable, indicationGap)
ind
# add the indication columns to the original table
result <- x %>%
dplyr::left_join(
ind %>% dplyr::rename(!!indicationDate := "cohort_start_date"),
by = c("subject_id", indicationDate)
) %>%
CDMConnector::computeQuery()
result
result <- PatientProfiles::addAttributes(result, x)
result
targetCohortName <- dplyr::tibble(
cohort_definition_id = c(1, 1, 1, 2),
subject_id = c(1, 1, 2, 3),
cohort_start_date = as.Date(c(
"2020-01-01", "2020-06-01", "2020-01-02", "2020-01-01"
)),
cohort_end_date = as.Date(c(
"2020-04-01", "2020-08-01", "2020-02-02", "2020-03-01"
))
)
indicationCohortName <- dplyr::tibble(
cohort_definition_id = c(1, 1, 2, 3, 1),
subject_id = c(1, 3, 1, 2, 1),
cohort_start_date = as.Date(
c(
"2019-12-30",
"2020-01-01",
"2020-05-25",
"2020-01-01",
"2020-05-25"
)
),
cohort_end_date = as.Date(
c(
"2019-12-30",
"2020-01-01",
"2020-05-25",
"2020-01-01",
"2020-05-25"
)
)
)
attr(indicationCohortName, "cohort_set") <- dplyr::tibble(
cohort_definition_id = c(1, 2),
cohort_name = c("asthma", "covid")
)
condition_occurrence <- dplyr::tibble(
person_id = 1,
condition_start_date = as.Date("2020-05-31"),
condition_end_date = as.Date("2020-05-31")
)
cdm <-
mockDrugUtilisation(
connectionDetails,
cohort1 = targetCohortName,
cohort2 = indicationCohortName,
condition_occurrence = condition_occurrence
)
# check for indication 0
res0 <- cdm$cohort1 %>%
addIndication(
cdm = cdm, indicationCohortName = "cohort2", indicationGap = 0,
unknownIndicationTable = NULL
)
res0
expect_true(
setdiff(colnames(res0), colnames(cdm$cohort1)) == "indication_gap_0"
)
expect_true(length(setdiff(colnames(res0), colnames(cdm$cohort1))) == 3)
expect_true(
c("indication_gap_0_asthma", "indication_gap_0_covid",
"indication_gap_0_none") %in%
setdiff(colnames(res0), colnames(cdm$cohort1))
)
expect_true(all(
c("indication_gap_0_asthma", "indication_gap_0_covid",
"indication_gap_0_none") %in%
setdiff(colnames(res0), colnames(cdm$cohort1))
))
res0 %>%
dplyr::filter(.data$subject_id == 3)
res0
res0 <- res0 %>% indicationToStrata()
cohort <- res0
indicationColumns(cohort)
x <- res0
colnames(x)
names <- colnames(x)[substr(colnames(x), 1, 15) == "indication_gap_"]
names
devtools::load_all()
res0 <- res0 %>% indicationToStrata()
cohort <- res0
indicationColumns(cohort)
indicationVariables = indicationColumns(cohort)
keep = FALSE
# check inputs
checkInputs(
cohort = cohort, indicationVariables = indicationVariables, keep = keep
)
errorMessage <- "indicationVariables must point to character columns in cohort"
if (!is.character(indicationVariables) | length(indicationVariables) == 0) {
cli::cli_abort(errorMessage)
}
if (!all(indicationVariables %in% colnames(cohort))) {
cli::cli_abort(errorMessage)
}
cohort <- cohort %>%
dplyr::select(dplyr::all_of(indicationVariables)) %>%
utils::head(1) %>%
dplyr::collect()
PatientProfiles::variableTypes(cohort)
indicationVariables
cli::cli_abort("indicationVariables should start with indication_gap_{gap}")
cli::cli_abort("indicationVariables should start with indication_gap_\{gap|}")
cli::cli_abort("indicationVariables should start with indication_gap_\\{gap|}")
cli::cli_abort("indicationVariables should start with indication_gap_/{gap|}")
cli::cli_abort("indicationVariables should start with indication_gap_/{gap/}")
cli::cli_abort("indicationVariables should start with indication_gap_\{gap\}")
devtools::load_all()
devtools::document()
result <- summariseIndication(
res, cdm, indicationVariables = c(
"indication_gap_inf_asthma", "indication_gap_inf_covid",
"indication_gap_inf_none", "indication_gap_inf_unknown"
)
)
targetCohortName <- dplyr::tibble(
cohort_definition_id = c(1, 1, 1, 2),
subject_id = c(1, 1, 2, 3),
cohort_start_date = as.Date(c(
"2020-01-01", "2020-06-01", "2020-01-02", "2020-01-01"
)),
cohort_end_date = as.Date(c(
"2020-04-01", "2020-08-01", "2020-02-02", "2020-03-01"
))
)
indicationCohortName <- dplyr::tibble(
cohort_definition_id = c(1, 1, 2, 3, 1),
subject_id = c(1, 3, 1, 2, 1),
cohort_start_date = as.Date(c(
"2019-12-30", "2020-01-01", "2020-05-25", "2020-01-01", "2020-05-25"
)),
cohort_end_date = as.Date(c(
"2019-12-30", "2020-01-01", "2020-05-25", "2020-01-01", "2020-05-25"
))
)
condition_occurrence <- dplyr::tibble(
person_id = 1,
condition_start_date = as.Date("2020-05-31"),
condition_end_date = as.Date("2020-05-31")
)
attr(indicationCohortName, "cohort_set") <- dplyr::tibble(
cohort_definition_id = c(1, 2),
cohort_name = c("asthma", "covid")
)
cdm <-mockDrugUtilisation(
connectionDetails, cohort1 = targetCohortName,
cohort2 = indicationCohortName, condition_occurrence = condition_occurrence
)
res <- cdm$cohort1 %>%
addIndication(
cdm = cdm, indicationCohortName = "cohort2", indicationGap = c(0, 7, 30, Inf),
unknownIndicationTable = "condition_occurrence"
)
devtools::load_all()
availableConnections <- list(list(
con = DBI::dbConnect(duckdb::duckdb(), ":memory:"),
writeSchema = "main",
writePrefix = NULL
))
k <- 1
connectionDetails <- availableConnections[[k]]
targetCohortName <- dplyr::tibble(
cohort_definition_id = c(1, 1, 1, 2),
subject_id = c(1, 1, 2, 3),
cohort_start_date = as.Date(c(
"2020-01-01", "2020-06-01", "2020-01-02", "2020-01-01"
)),
cohort_end_date = as.Date(c(
"2020-04-01", "2020-08-01", "2020-02-02", "2020-03-01"
))
)
indicationCohortName <- dplyr::tibble(
cohort_definition_id = c(1, 1, 2, 3, 1),
subject_id = c(1, 3, 1, 2, 1),
cohort_start_date = as.Date(c(
"2019-12-30", "2020-01-01", "2020-05-25", "2020-01-01", "2020-05-25"
)),
cohort_end_date = as.Date(c(
"2019-12-30", "2020-01-01", "2020-05-25", "2020-01-01", "2020-05-25"
))
)
condition_occurrence <- dplyr::tibble(
person_id = 1,
condition_start_date = as.Date("2020-05-31"),
condition_end_date = as.Date("2020-05-31")
)
attr(indicationCohortName, "cohort_set") <- dplyr::tibble(
cohort_definition_id = c(1, 2),
cohort_name = c("asthma", "covid")
)
cdm <-mockDrugUtilisation(
connectionDetails, cohort1 = targetCohortName,
cohort2 = indicationCohortName, condition_occurrence = condition_occurrence
)
res <- cdm$cohort1 %>%
addIndication(
cdm = cdm, indicationCohortName = "cohort2", indicationGap = c(0, 7, 30, Inf),
unknownIndicationTable = "condition_occurrence"
)
result <- summariseIndication(res, cdm)
targetCohortName <- dplyr::tibble(
cohort_definition_id = c(1, 1, 1, 2),
subject_id = c(1, 1, 2, 3),
cohort_start_date = as.Date(c(
"2020-01-01", "2020-06-01", "2020-01-02", "2020-01-01"
)),
cohort_end_date = as.Date(c(
"2020-04-01", "2020-08-01", "2020-02-02", "2020-03-01"
))
)
indicationCohortName <- dplyr::tibble(
cohort_definition_id = c(1, 1, 2, 3, 1),
subject_id = c(1, 3, 1, 2, 1),
cohort_start_date = as.Date(c(
"2019-12-30", "2020-01-01", "2020-05-25", "2020-01-01", "2020-05-25"
)),
cohort_end_date = as.Date(c(
"2019-12-30", "2020-01-01", "2020-05-25", "2020-01-01", "2020-05-25"
))
)
condition_occurrence <- dplyr::tibble(
person_id = 1,
condition_start_date = as.Date("2020-05-31"),
condition_end_date = as.Date("2020-05-31")
)
attr(indicationCohortName, "cohort_set") <- dplyr::tibble(
cohort_definition_id = c(1, 2),
cohort_name = c("asthma", "covid")
)
cdm <-mockDrugUtilisation(
connectionDetails, cohort1 = targetCohortName,
cohort2 = indicationCohortName, condition_occurrence = condition_occurrence
)
res <- cdm$cohort1 %>%
addIndication(
cdm = cdm, indicationCohortName = "cohort2", indicationGap = c(0, 7, 30, Inf),
unknownIndicationTable = "condition_occurrence"
)
result <- summariseIndication(res, cdm)
res
remotes::install_github("darwin-eu-dev/PatientProfiles")
res <- cdm$cohort1 %>%
addIndication(
cdm = cdm, indicationCohortName = "cohort2", indicationGap = c(0, 7, 30, Inf),
unknownIndicationTable = "condition_occurrence"
)
result <- summariseIndication(res, cdm)
devtools::load_all()
result <- summariseIndication(res, cdm)
