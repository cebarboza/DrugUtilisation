# 1) run all testthat tests (after reloading with current code) - do all pass?
devtools::test()
# 2) check code coverage - are all functions covered 100%?
detach("package:CodelistGenerator", unload=TRUE)
# 2) check code coverage - are all functions covered 100%?
detach("package:DrugUtilisation", unload=TRUE)
devtools::test_coverage()
# 3) run all examples - do they all run without error?
devtools::run_examples()
# 9) Document package
devtools::document() #  Use roxygen to document a package.
# 1) run all testthat tests (after reloading with current code) - do all pass?
devtools::test()
# 2) check code coverage - are all functions covered 100%?
detach("package:DrugUtilisation", unload=TRUE)
devtools::test_coverage()
# 10) Regenerate vignettes
# data for vignettes is precomputed, so first letÂ´s do that
# this take a little while
source(here::here("extras", "precomputeVignetteData.R"))
devtools::build_vignettes()
# 11) check website locally
# you can check the website locally before pushing by running
pkgdown::build_site()
# 1) run all testthat tests (after reloading with current code) - do all pass?
devtools::test()
devtools::test_coverage()
# 3) run all examples - do they all run without error?
devtools::run_examples()
# 4) check spelling throughout - any obvious typos to fix?
devtools::spell_check()
# 5) Check documentation (as R CMD check)
devtools::check_man()
stop("Provide only one source for the table. There are two options:\n1) table\n2) cdm and tableName")
checkmate::assert_logical(verbose)
verbose <- 1
checkmate::assert_logical(verbose)
a <- tibble::tibble(a = c(1,2), b = c("a","b"))
a
a %>% filter(a == 1)
a %>% dplyr::filter(a == 1)
a %>% dplyr::filter(a == 1) %>% dplyr::compute()
styler:::style_selection()
table <- a
checkmate::assertTRUE(
c(
"subject_id", "quantity", "drug_concept_id", "drug_start_date",
"drug_end_date"
) %in% colnames(table)
)
stop("Provide only the source for the table. There are two options:\n1)
table\n2) cdm and tableName")
stop("Provide only one source for the table. There are two options:
1) table\n2) cdm and tableName")
checkmate::assert_tibble(table)
table <- 1
checkmate::assert_tibble(table)
checkmate::assert_logical(verbose)
checkmate::assert_tibble(table)
checkmate::assertTibble(table)
checkmate::assertTibble(table)
checkmate::assertLogical(verbose)
checkmate::assertTRUE(
c(
"subject_id", "quantity", "drug_concept_id", "drug_start_date",
"drug_end_date"
) %in% colnames(table)
)
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
install.packages("Rpostgres")
install.packages("RPostgres")
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
