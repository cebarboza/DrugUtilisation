[{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"vignette, introduce use addDrugUse summarizeDrugUse functions. functions add new columns drug-related information summarize results.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"create-mock-data-first","dir":"Articles","previous_headings":"Introduction","what":"Create mock data first","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"","code":"library(DrugUtilisation) library(CodelistGenerator) library(CDMConnector) library(dplyr) library(PatientProfiles)  cdm <- mockDrugUtilisation(numberIndividual  = 200)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"create-a-drug-utilisation-cohort","dir":"Articles","previous_headings":"Introduction","what":"Create a drug utilisation cohort","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"use Acetaminophen example drug construct drug utilisation cohort. begin, employ package “codeListGenetator” generate concept list associated Acetaminophen. Next, create drug utilisation cohort using conceptList “generateDrugUtilisationCohortSet” function. better understanding arguments functionalities “generateDrugUtilisationCohortSet”, please refer “Use DrugUtilisation create cohort” vignette.","code":"conceptList <- getDrugIngredientCodes(cdm, c(\"acetaminophen\")) conceptList #> $acetaminophen #> [1]  1125315  1125360  2905077 43135274 cdm <- generateDrugUtilisationCohortSet(   cdm  = cdm,   name = \"acetaminophen_users\",   conceptSet = conceptList )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"adddruguse","dir":"Articles","previous_headings":"","what":"addDrugUse","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"addDrugUse function used add columns related drug use. must provide cohort reference ingredient. See example . seen, following columns added: 1. number_exposures: Number exposures cohort observation. 2. cumulative_quantity: Cumulative sum column quantity drug_exposure table drug exposure period. 3. initial_quantity: Quantity drug_exposure_start_date. 4. impute_duration_percentage: drug exposure record duration exposure, falls outside specified range (see later), records imputed. column shows number records imputed imputed. 5. number_eras: Number eras within drug exposure period. 6. impute_daily_dose_percentage: drug exposure record daily dose exposure, falls outside specified range (see later), records imputed. column shows number records imputed imputed. 7. initial_daily_dose_milligram: dose drug_exposure_start_date. 8. cumulative_dose_milligram: cumulative sum column dose drug_exposure table drug exposure period, can choose columns added defining duration, quantity, dose inputs either TRUE FALSE. duration, quantity, dose FALSE, number_exposures number_eras added.","code":"addDrugUse(   cohort = cdm[[\"acetaminophen_users\"]],   cdm    = cdm,   ingredientConceptId = 1125315 ) #> # Source:   table<dbplyr_039> [?? x 13] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date duration #>                   <dbl>      <int> <date>            <date>             <dbl> #>  1                    1          8 1982-11-07        1986-11-11          1466 #>  2                    1         19 2020-12-22        2021-11-11           325 #>  3                    1         66 2018-07-21        2018-10-11            83 #>  4                    1        119 2006-04-03        2017-07-18          4125 #>  5                    1        127 2016-10-11        2022-03-17          1984 #>  6                    1        153 2022-03-16        2022-03-28            13 #>  7                    1        169 1997-11-20        1998-12-16           392 #>  8                    1         26 1991-01-10        1991-05-19           130 #>  9                    1         67 2010-01-27        2016-09-01          2410 #> 10                    1        118 1997-05-27        2004-06-09          2571 #> # ℹ more rows #> # ℹ 8 more variables: number_exposures <dbl>, cumulative_quantity <dbl>, #> #   initial_quantity <dbl>, impute_duration_percentage <dbl>, #> #   number_eras <dbl>, impute_daily_dose_percentage <dbl>, #> #   initial_daily_dose_milligram <dbl>, cumulative_dose_milligram <dbl> addDrugUse(   cohort = cdm[[\"acetaminophen_users\"]],   cdm    = cdm,   ingredientConceptId = 1125315,   duration = TRUE,   quantity = FALSE,   dose = FALSE ) #> # Source:   table<dbplyr_046> [?? x 8] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date duration #>                   <dbl>      <int> <date>            <date>             <dbl> #>  1                    1          8 1982-11-07        1986-11-11          1466 #>  2                    1         19 2020-12-22        2021-11-11           325 #>  3                    1         66 2018-07-21        2018-10-11            83 #>  4                    1        119 2006-04-03        2017-07-18          4125 #>  5                    1        127 2016-10-11        2022-03-17          1984 #>  6                    1        153 2022-03-16        2022-03-28            13 #>  7                    1        169 1997-11-20        1998-12-16           392 #>  8                    1         26 1991-01-10        1991-05-19           130 #>  9                    1         67 2010-01-27        2016-09-01          2410 #> 10                    1        118 1997-05-27        2004-06-09          2571 #> # ℹ more rows #> # ℹ 3 more variables: number_exposures <dbl>, impute_duration_percentage <dbl>, #> #   number_eras <dbl> addDrugUse(   cohort = cdm[[\"acetaminophen_users\"]],   cdm    = cdm,   ingredientConceptId = 1125315,   gapEra = 20,   eraJoinMode = \"zero\",   duration = FALSE,   quantity = FALSE,   dose = FALSE ) #> # Source:   table<dbplyr_053> [?? x 6] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <dbl>      <int> <date>            <date>          #>  1                    1          8 1982-11-07        1986-11-11      #>  2                    1         19 2020-12-22        2021-11-11      #>  3                    1         66 2018-07-21        2018-10-11      #>  4                    1        119 2006-04-03        2017-07-18      #>  5                    1        127 2016-10-11        2022-03-17      #>  6                    1        153 2022-03-16        2022-03-28      #>  7                    1        169 1997-11-20        1998-12-16      #>  8                    1         26 1991-01-10        1991-05-19      #>  9                    1         67 2010-01-27        2016-09-01      #> 10                    1        118 1997-05-27        2004-06-09      #> # ℹ more rows #> # ℹ 2 more variables: number_exposures <dbl>, number_eras <dbl>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"gapera","dir":"Articles","previous_headings":"addDrugUse","what":"gapEra","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"gapEra parameter defines number days two continuous drug exposures. Let’s see example. First, let’s create cohort gapEra = 0. better understanding, let’s observe subject_id = 56. subject two different drug exposure periods separated less 6 months. Hence, two different cohort periods: Let’s merge two periods modifying gapEra input creating cohort. better understanding gapEra arguments functionalities, please see “Use DrugUtilisation create cohort” vignette. Mow one record two exposures subject number 56. Note number eras still 1, defined gapEra cohort created. However, possible specify different gapEra one defined cohort created. Note number_eras now indicates two eras within record.","code":"cdm <- generateDrugUtilisationCohortSet(   cdm = cdm,   name = \"acetaminophen_example1\",   conceptSet = conceptList,   gapEra = 0 )  cdm$drug_exposure %>%   filter(drug_concept_id %in% !!conceptList$acetaminophen) %>%   filter(person_id == 56) #> # Source:   SQL [2 x 7] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   drug_exposure_id person_id drug_concept_id drug_exposure_start_date #>              <int>     <int>           <dbl> <date>                   #> 1              166        56         1125360 2022-01-27               #> 2              164        56        43135274 2021-08-08               #> # ℹ 3 more variables: drug_exposure_end_date <date>, #> #   drug_type_concept_id <dbl>, quantity <dbl> cdm$acetaminophen_example1 %>%   addDrugUse(     ingredientConceptId = 1125315,     gapEra = 0   ) %>%   filter(subject_id == 56) #> # Source:   SQL [2 x 13] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date duration #>                  <dbl>      <int> <date>            <date>             <dbl> #> 1                    1         56 2021-08-08        2021-09-17            41 #> 2                    1         56 2022-01-27        2022-03-04            37 #> # ℹ 8 more variables: number_exposures <dbl>, cumulative_quantity <dbl>, #> #   initial_quantity <dbl>, impute_duration_percentage <dbl>, #> #   number_eras <dbl>, impute_daily_dose_percentage <dbl>, #> #   initial_daily_dose_milligram <dbl>, cumulative_dose_milligram <dbl> cdm <- generateDrugUtilisationCohortSet(   cdm = cdm,   name = \"acetaminophen_example2\",   conceptSet = conceptList,   gapEra = 180 )  cdm$acetaminophen_example2 %>%   addDrugUse(     ingredientConceptId = 1125315,     gapEra = 180,     duration = TRUE,     quantity = FALSE,     dose = FALSE   ) %>%   filter(subject_id == 56) #> # Source:   SQL [1 x 8] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date duration #>                  <dbl>      <int> <date>            <date>             <dbl> #> 1                    1         56 2021-08-08        2022-03-04           209 #> # ℹ 3 more variables: number_exposures <dbl>, impute_duration_percentage <dbl>, #> #   number_eras <dbl> cdm$acetaminophen_example2 %>%   addDrugUse(     ingredientConceptId = 1125315,     gapEra = 0   ) %>%   filter(subject_id == 56) #> # Source:   SQL [1 x 13] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date duration #>                  <dbl>      <int> <date>            <date>             <dbl> #> 1                    1         56 2021-08-08        2022-03-04           209 #> # ℹ 8 more variables: number_exposures <dbl>, cumulative_quantity <dbl>, #> #   initial_quantity <dbl>, impute_duration_percentage <dbl>, #> #   number_eras <dbl>, impute_daily_dose_percentage <dbl>, #> #   initial_daily_dose_milligram <dbl>, cumulative_dose_milligram <dbl>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"erajoinmode","dir":"Articles","previous_headings":"addDrugUse","what":"eraJoinMode","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"subject_id number 56 two separate exposure periods. observed, defining gapEra, can merge two periods single era. However, different ways join two continuous exposures, can specified eraJoinMode. three different ways join different continuous exposures: eraJoinMode = “zero” (default option): Subject’s daily dose period continuous exposures zero. However, time elapsed exposures contributes total exposed time. eraJoinMode = “previous”: subject’s daily dose period continuous exposures equal daily dose earliest subexposure. time exposures contributes total exposed time. eraJoinMode = “subsequent”: subject’s daily dose period continuous exposures daily dose latest subexposure. time exposures contributes total exposed time.","code":"cdm$acetaminophen_example2 %>%   addDrugUse(     ingredientConceptId = 1125315,     gapEra = 180,     duration = TRUE,     quantity = TRUE,     dose = TRUE,     eraJoinMode = \"zero\"   ) %>%   dplyr::filter(subject_id == 56) #> # Source:   SQL [1 x 13] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date duration #>                  <dbl>      <int> <date>            <date>             <dbl> #> 1                    1         56 2021-08-08        2022-03-04           209 #> # ℹ 8 more variables: number_exposures <dbl>, cumulative_quantity <dbl>, #> #   initial_quantity <dbl>, impute_duration_percentage <dbl>, #> #   number_eras <dbl>, impute_daily_dose_percentage <dbl>, #> #   initial_daily_dose_milligram <dbl>, cumulative_dose_milligram <dbl> cdm$acetaminophen_example2 %>%   addDrugUse(     ingredientConceptId = 1125315,     gapEra = 180,     duration = TRUE,     quantity = TRUE,     dose = TRUE,     eraJoinMode = \"previous\"   ) %>%   dplyr::filter(subject_id == 56) #> # Source:   SQL [1 x 13] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date duration #>                  <dbl>      <int> <date>            <date>             <dbl> #> 1                    1         56 2021-08-08        2022-03-04           209 #> # ℹ 8 more variables: number_exposures <dbl>, cumulative_quantity <dbl>, #> #   initial_quantity <dbl>, impute_duration_percentage <dbl>, #> #   number_eras <dbl>, impute_daily_dose_percentage <dbl>, #> #   initial_daily_dose_milligram <dbl>, cumulative_dose_milligram <dbl> cdm$acetaminophen_example2 %>%   addDrugUse(     ingredientConceptId = 1125315,     gapEra = 180,     duration = TRUE,     quantity = TRUE,     dose = TRUE,     eraJoinMode = \"subsequent\"   ) %>%   dplyr::filter(subject_id == 56) #> # Source:   SQL [1 x 13] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date duration #>                  <dbl>      <int> <date>            <date>             <dbl> #> 1                    1         56 2021-08-08        2022-03-04           209 #> # ℹ 8 more variables: number_exposures <dbl>, cumulative_quantity <dbl>, #> #   initial_quantity <dbl>, impute_duration_percentage <dbl>, #> #   number_eras <dbl>, impute_daily_dose_percentage <dbl>, #> #   initial_daily_dose_milligram <dbl>, cumulative_dose_milligram <dbl>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"overlapmode","dir":"Articles","previous_headings":"addDrugUse","what":"overlapMode","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"previous example, observed merging two separated drug exposure periods one era. Now, let’s explore two overlapping drug exposure periods can merged. ’s important note input impacts overlapping periods share start date. Refer input sameIndexMode details managing overlapping periods start date. Let’s observe subject number 8. can customize overlapping handled using overlapMode input. case, five options: overlapMode = “sum” (default): daily dose considered sum exposures. overlapMode = “previous”: daily dose considered earliest exposure. overlapMode = “subsequent”: daily dose considered latest exposure. overlapMode = “minimum”: daily dose considered minimum value among exposures. overlapMode = “maximum”: daily dose considered maximum value among exposures","code":"cdm$drug_exposure %>%   filter(drug_concept_id %in% !!conceptList$acetaminophen) %>%   filter(person_id == 8)  #> # Source:   SQL [2 x 7] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   drug_exposure_id person_id drug_concept_id drug_exposure_start_date #>              <int>     <int>           <dbl> <date>                   #> 1               27         8         1125360 1984-12-28               #> 2               28         8         1125360 1982-11-07               #> # ℹ 3 more variables: drug_exposure_end_date <date>, #> #   drug_type_concept_id <dbl>, quantity <dbl> cdm$acetaminophen_example2 %>%   addDrugUse(     ingredientConceptId = 1125315,     duration = FALSE,     quantity = FALSE,     dose     = TRUE,     overlapMode = \"sum\"   ) %>%   dplyr::filter(subject_id == 8) #> # Source:   SQL [1 x 9] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date #>                  <dbl>      <int> <date>            <date>          #> 1                    1          8 1982-11-07        1986-11-11      #> # ℹ 5 more variables: number_exposures <dbl>, number_eras <dbl>, #> #   impute_daily_dose_percentage <dbl>, initial_daily_dose_milligram <dbl>, #> #   cumulative_dose_milligram <dbl> cdm$acetaminophen_example2 %>%   addDrugUse(     ingredientConceptId = 1125315,     duration = FALSE,     quantity = FALSE,     dose     = TRUE,     overlapMode = \"previous\"   ) %>%   dplyr::filter(subject_id == 8) #> # Source:   SQL [1 x 9] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date #>                  <dbl>      <int> <date>            <date>          #> 1                    1          8 1982-11-07        1986-11-11      #> # ℹ 5 more variables: number_exposures <dbl>, number_eras <dbl>, #> #   impute_daily_dose_percentage <dbl>, initial_daily_dose_milligram <dbl>, #> #   cumulative_dose_milligram <dbl> cdm$acetaminophen_example2 %>%   addDrugUse(     ingredientConceptId = 1125315,     duration = FALSE,     quantity = FALSE,     dose     = TRUE,     overlapMode = \"subsequent\"   ) %>%   dplyr::filter(subject_id == 8) %>%   select(contains(\"dose\")) #> # Source:   SQL [1 x 3] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   impute_daily_dose_percentage initial_daily_dose_milli…¹ cumulative_dose_mill…² #>                          <dbl>                      <dbl>                  <dbl> #> 1                            0                      0.341                 17896. #> # ℹ abbreviated names: ¹​initial_daily_dose_milligram, #> #   ²​cumulative_dose_milligram cdm$acetaminophen_example2 %>%   addDrugUse(     ingredientConceptId = 1125315,     duration = FALSE,     quantity = FALSE,     dose     = TRUE,     overlapMode = \"minimum\"   ) %>%   dplyr::filter(subject_id == 8) #> # Source:   SQL [1 x 9] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date #>                  <dbl>      <int> <date>            <date>          #> 1                    1          8 1982-11-07        1986-11-11      #> # ℹ 5 more variables: number_exposures <dbl>, number_eras <dbl>, #> #   impute_daily_dose_percentage <dbl>, initial_daily_dose_milligram <dbl>, #> #   cumulative_dose_milligram <dbl> cdm$acetaminophen_example2 %>%   addDrugUse(     ingredientConceptId = 1125315,     duration = FALSE,     quantity = FALSE,     dose     = TRUE,     overlapMode = \"maximum\"   ) %>%   dplyr::filter(subject_id == 8) #> # Source:   SQL [1 x 9] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date #>                  <dbl>      <int> <date>            <date>          #> 1                    1          8 1982-11-07        1986-11-11      #> # ℹ 5 more variables: number_exposures <dbl>, number_eras <dbl>, #> #   impute_daily_dose_percentage <dbl>, initial_daily_dose_milligram <dbl>, #> #   cumulative_dose_milligram <dbl>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"sameindexmode","dir":"Articles","previous_headings":"addDrugUse","what":"sameIndexMode","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"input works similarly overlapMode, specifically impacts overlapping drug exposure periods start date. options “minimum”, “maximum”, “sum” (default one), described overlapMode.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"imputeduration-and-imputedailydose","dir":"Articles","previous_headings":"addDrugUse","what":"imputeDuration and imputeDailyDose","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"inputs determine way duration daily dose imputed value NA fall outside specified range (defined durationRange dailyDoseRange inputs). five possible values two inputs: imputeDuration/imputeDailyDose = “none” (default): imputation applied. imputeDuration/imputeDailyDose = “median”, “mean”, “mode”: imputation method used. imputeDuration/imputeDailyDose can also numerical value replace previous one.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"durationrange-and-dailydoserange","dir":"Articles","previous_headings":"addDrugUse","what":"durationRange and dailyDoseRange","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"inputs used define range within duration/daily dose must comprised. numeric vector length two, second value must greater equal first one. set NULL, restrictions applied. durationRange dailyDoseRange set “none”, imputeDuration imputeDailyDose must specified, respectively.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"summarisedruguse","dir":"Articles","previous_headings":"","what":"summariseDrugUse","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"function employed sum dose table across multiple cohorts. Let’s see operates. First, let’s use addDrugUse add drug details “acetaminophen_users” cohort. , can apply summariseDrugUse explore characteristics cohort.","code":"cdm[[\"acetaminophen_users\"]] <- cdm[[\"acetaminophen_users\"]] %>%    addDrugUse(     cdm    = cdm,     ingredientConceptId = 1125315   )  summariseDrugUse(cdm[[\"acetaminophen_users\"]]) #> # A tibble: 101 × 11 #>    group_name  group_level   strata_name strata_level variable    variable_level #>    <chr>       <chr>         <chr>       <chr>        <chr>       <chr>          #>  1 cohort_name acetaminophen Overall     Overall      number sub… NA             #>  2 cohort_name acetaminophen Overall     Overall      number rec… NA             #>  3 cohort_name acetaminophen Overall     Overall      duration    NA             #>  4 cohort_name acetaminophen Overall     Overall      duration    NA             #>  5 cohort_name acetaminophen Overall     Overall      duration    NA             #>  6 cohort_name acetaminophen Overall     Overall      duration    NA             #>  7 cohort_name acetaminophen Overall     Overall      duration    NA             #>  8 cohort_name acetaminophen Overall     Overall      duration    NA             #>  9 cohort_name acetaminophen Overall     Overall      duration    NA             #> 10 cohort_name acetaminophen Overall     Overall      duration    NA             #> # ℹ 91 more rows #> # ℹ 5 more variables: variable_type <chr>, estimate_type <chr>, estimate <chr>, #> #   cdm_name <chr>, result_type <chr>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"strata","dir":"Articles","previous_headings":"summariseDrugUse","what":"strata","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"can employ parameter stratify cohort calculate estimates within every strata group. Let’s use addSex function “PatientProfiles” include sex column cohort. Subsequently, can use strata parameter.","code":"cdm[[\"acetaminophen_users\"]] <- cdm[[\"acetaminophen_users\"]] %>%   addSex(cdm)  summariseDrugUse(cdm[[\"acetaminophen_users\"]],                  strata = list(\"sex\" = \"sex\")) #> # A tibble: 303 × 11 #>    group_name  group_level   strata_name strata_level variable    variable_level #>    <chr>       <chr>         <chr>       <chr>        <chr>       <chr>          #>  1 cohort_name acetaminophen Overall     Overall      number sub… NA             #>  2 cohort_name acetaminophen Overall     Overall      number rec… NA             #>  3 cohort_name acetaminophen Overall     Overall      duration    NA             #>  4 cohort_name acetaminophen Overall     Overall      duration    NA             #>  5 cohort_name acetaminophen Overall     Overall      duration    NA             #>  6 cohort_name acetaminophen Overall     Overall      duration    NA             #>  7 cohort_name acetaminophen Overall     Overall      duration    NA             #>  8 cohort_name acetaminophen Overall     Overall      duration    NA             #>  9 cohort_name acetaminophen Overall     Overall      duration    NA             #> 10 cohort_name acetaminophen Overall     Overall      duration    NA             #> # ℹ 293 more rows #> # ℹ 5 more variables: variable_type <chr>, estimate_type <chr>, estimate <chr>, #> #   cdm_name <chr>, result_type <chr>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"druguseestimates","dir":"Articles","previous_headings":"summariseDrugUse","what":"drugUseEstimates","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"Use input specify estimates calculated. default, compute minimum value, quartiles (5%, 25%, 50% - median, 75% 95%), maximum value, mean, standard deviation, number missings values column added addDrugUse.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addDrugUse.html","id":"mincellcount","dir":"Articles","previous_headings":"summariseDrugUse","what":"minCellCount","title":"Use addDrugUse and summariseDrugUse to explore a drug","text":"Specify minimum number individuals strata group musthave appear table.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addIndications-example.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Add indications to Drug Utilisation Cohort","text":"vignette, demonstrate use addIndications function establish binary indicator drug utilisation cohort another concept-based cohort. DrugUtilisation package designed work data OMOP CDM format, first step create reference data using DBI CDMConnector packages. connection Postgres database look like:","code":"library(DrugUtilisation) library(DBI) library(duckdb) library(CDMConnector) library(CodelistGenerator) library(dplyr) library(PatientProfiles)   con <- DBI::dbConnect(duckdb::duckdb(), eunomia_dir())  cdm <- CDMConnector::cdm_from_con(   con = con,   cdm_schema = \"main\",   write_schema = \"main\" )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addIndications-example.html","id":"create-a-drug-utilisation-cohort","dir":"Articles","previous_headings":"","what":"Create a drug utilisation cohort","title":"Add indications to Drug Utilisation Cohort","text":"use Acetaminophen example drug construct drug utilisation cohort. begin, ’ll employ “codelistGenerator” generate concept list associated Acetaminophen. Next, can create drug utilisation cohort using conceptList “generateDrugUtilisationCohortSet” function. better understanding arguments functionalities “generateDrugUtilisationCohortSet”, please refer “Use DrugUtilisation create cohort” vignette.","code":"# using CodelistGenerator conceptList <- CodelistGenerator::getDrugIngredientCodes(cdm, \"acetaminophen\") conceptList #> $acetaminophen #> [1]  1125315  1127078  1127433 40229134 40231925 40162522 19133768 cdm <- generateDrugUtilisationCohortSet(   cdm = cdm,   name = \"acetaminophen_users\",   conceptSet = conceptList,   limit = \"All\",   gapEra = 30,   priorUseWashout = 0 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addIndications-example.html","id":"create-a-indication-cohort","dir":"Articles","previous_headings":"","what":"Create a indication cohort","title":"Add indications to Drug Utilisation Cohort","text":"Next going create indications cohort indicate patients sinusitis bronchitis. can done using generateConceptCohortSet().","code":"indications <-   list(     sinusitis = c(257012, 4294548, 40481087),     bronchitis = c(260139, 258780)   )  cdm <-   generateConceptCohortSet(cdm, name = \"indications_cohort\", indications)  cohortCount(cdm[[\"indications_cohort\"]]) %>%   left_join(     cohortSet(cdm[[\"indications_cohort\"]]) %>%       select(cohort_definition_id, cohort_name),     by = \"cohort_definition_id\"   ) #> # A tibble: 2 × 4 #>   cohort_definition_id number_records number_subjects cohort_name #>                  <int>          <dbl>           <dbl> <chr>       #> 1                    1           2688            2688 sinusitis   #> 2                    2           2546            2546 bronchitis"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addIndications-example.html","id":"add-indications","dir":"Articles","previous_headings":"","what":"Add indications","title":"Add indications to Drug Utilisation Cohort","text":"add indication drug Utilisation cohort can simple use addIndication function. example provided . function argument specify indication gaps. indication gaps defined gap event indication. also allow user specify tables look unknown indication.","code":"cdm[[\"acetaminophen_users\"]] %>%   addIndication(     cdm = cdm,      indicationCohortName = \"indications_cohort\",     indicationGap =  c(0, 30, 365),     unknownIndicationTable =  c(\"condition_occurrence\")   ) #> # Source:   table<dbplyr_036> [?? x 16] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2//tmp/RtmpicSFjz/file1c79292f249f.duckdb] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <dbl>      <int> <date>            <date>          #>  1                    1         78 1968-11-25        1968-12-16      #>  2                    1         78 1991-10-28        1991-11-04      #>  3                    1        141 1987-10-31        1987-11-14      #>  4                    1        141 1995-07-30        1995-09-28      #>  5                    1        260 1974-03-05        1974-03-19      #>  6                    1        260 1979-09-06        1979-09-13      #>  7                    1        260 1990-08-10        1990-09-16      #>  8                    1        300 2005-06-16        2005-06-30      #>  9                    1        300 2007-08-21        2007-08-28      #> 10                    1        334 1962-11-12        1962-11-26      #> # ℹ more rows #> # ℹ 12 more variables: indication_gap_0_bronchitis <dbl>, #> #   indication_gap_0_sinusitis <dbl>, indication_gap_0_none <dbl>, #> #   indication_gap_0_unknown <dbl>, indication_gap_30_sinusitis <dbl>, #> #   indication_gap_30_bronchitis <dbl>, indication_gap_30_none <dbl>, #> #   indication_gap_30_unknown <dbl>, indication_gap_365_bronchitis <dbl>, #> #   indication_gap_365_sinusitis <dbl>, indication_gap_365_none <dbl>, …"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/addIndications-example.html","id":"summarise-indications","dir":"Articles","previous_headings":"","what":"Summarise Indications","title":"Add indications to Drug Utilisation Cohort","text":"create summary table indications cohort, can use summariseIndication function. can also summarize indications using strata argument summariseIndication function. example , summarized ageGroup sex.","code":"cdm[[\"acetaminophen_users\"]] %>%   addIndication(     cdm = cdm,      indicationCohortName = \"indications_cohort\",     indicationGap =  c(0, 30, 365),     unknownIndicationTable =  c(\"condition_occurrence\")   ) %>%   summariseIndication(cdm) %>%   select(\"variable\", \"estimate_type\", \"estimate\") #> # A tibble: 26 × 3 #>    variable                 estimate_type estimate         #>    <chr>                    <chr>         <chr>            #>  1 number subjects          count         2679             #>  2 number records           count         13860            #>  3 Indication on index date count         2518             #>  4 Indication on index date percentage    18.1673881673882 #>  5 Indication on index date count         <5               #>  6 Indication on index date percentage    NA               #>  7 Indication on index date count         163              #>  8 Indication on index date percentage    1.17604617604618 #>  9 Indication on index date count         11178            #> 10 Indication on index date percentage    80.6493506493507 #> # ℹ 16 more rows cdm[[\"acetaminophen_users\"]] %>%   addDemographics(ageGroup = list(c(0, 19), c(20, 150))) %>%   addIndication(     cdm = cdm,     indicationCohortName = \"indications_cohort\",     indicationGap =  c(0),     unknownIndicationTable =  c(\"condition_occurrence\")   ) %>%   summariseIndication(     cdm,     strata = list(\"age\" = \"age_group\", \"sex\" = \"sex\")) %>%       select(\"variable\", \"estimate_type\", \"estimate\",\"strata_name\") #> # A tibble: 50 × 4 #>    variable                 estimate_type estimate         strata_name #>    <chr>                    <chr>         <chr>            <chr>       #>  1 number subjects          count         2679             Overall     #>  2 number records           count         13860            Overall     #>  3 Indication on index date count         2518             Overall     #>  4 Indication on index date percentage    18.1673881673882 Overall     #>  5 Indication on index date count         <5               Overall     #>  6 Indication on index date percentage    NA               Overall     #>  7 Indication on index date count         163              Overall     #>  8 Indication on index date percentage    1.17604617604618 Overall     #>  9 Indication on index date count         11178            Overall     #> 10 Indication on index date percentage    80.6493506493507 Overall     #> # ℹ 40 more rows"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/benchmarkDusCapr.html","id":"creating-different-numbers-of-cohorts-using-drugutilisation","dir":"Articles","previous_headings":"","what":"Creating different numbers of cohorts using DrugUtilisation","title":"DrugUtilisation vs CapR","text":"generateDrugUtilisationCohortSet function DrugUtilisation used . Example duckdb shown vignette, actual computing time comparison postgres database provided end. First connect database function benchmark provided. Now create ingredient code using CodelistGenerator get code cohort generation Now create benachmarking function using Capr","code":"library(DrugUtilisation) library(CodelistGenerator) library(Capr) library(CDMConnector) library(dplyr) library(tictoc)  db_name <- Sys.getenv(\"...\") host <- Sys.getenv(\"...\") user <- Sys.getenv(\"...\") password <- Sys.getenv(\"...\") port <- Sys.getenv(\"...\")   db <- dbConnect(RPostgres::Postgres(),   dbname = db_name,   port = port,   host = host,   user = user,   password = password )  # The name of the schema that contains the OMOP CDM with patient-level data cdm_database_schema <- \"...\"  # The name of the schema where results tables will be created results_database_schema <- \"...\"  stem_table <- \"...\"   # cretae cdm object cdm <- CDMConnector::cdm_from_con(   con = db,   cdm_schema = cdm_database_schema,   write_schema = results_database_schema ) benchmarkGenerateDrugUtilisationCohortSet <- function(     cdm,     name = \"test\",     conceptSet,     durationRange = c(1, Inf),     imputeDuration = \"none\",     gapEra = 0,     priorUseWashout = 0,     priorObservation = 0,     cohortDateRange = as.Date(c(NA, NA)),     limit = \"all\",     numberOfCohort = c(1:20)) {      time_record <- list()      for (j in numberOfCohort)   {      conceptSetList <- conceptSet[c(1:j)]      name <- paste0(\"atc_dus_\", j)      tic()      cdm <- generateDrugUtilisationCohortSet(       cdm = cdm,       name = name,       conceptSet = conceptSet,       durationRange = durationRange,       imputeDuration = imputeDuration,       gapEra = gapEra,       priorUseWashout = priorUseWashout,       priorObservation = priorObservation,       cohortDateRange = cohortDateRange,       limit = limit     )      cohort_count(cdm[[name]])          t <- toc(quiet = TRUE)        time_record[[paste0(\"DUs number of cohorts\", j)]] <-c(\"timeTaken\" = as.numeric(t$toc - t$tic))       }       return(time_record) } atcCodes <- getATCCodes(cdm, level = \"ATC 1st\")  ingredientCodes <- getDrugIngredientCodes(cdm)  time_record_cprdgold_dus <- benchmarkGenerateDrugUtilisationCohortSet(cdm,   numberOfCohort = c(1:12,   conceptSet = ingredientCodes ) benchmarkCapr <- function(cdm,                           conceptSetList = atcCodes,                           numberOfCohort = c(1:20),                           observationWindow = continuousObservation(priorDays = 365),                           qualifiedLimit = \"All\",                           studyStartDate = as.Date(\"2015-01-01\"),                           studyEndDate = as.Date(\"2022-12-31\"),                           persistenceWindow = 0) {   time_record <- list()    for (j in numberOfCohort)   {     conceptSetList <- conceptSetList[c(1:j)]          atc_test <- lapply(seq_along(conceptSetList), function(i) {       cs(conceptSetList[[i]], name = names(conceptSetList)[[i]])     })      ch <- lapply(atc_test, function(x) {       cohort(         entry = entry(           drugExposure(x),           observationWindow = observationWindow,           qualifiedLimit = qualifiedLimit         ),         exit = exit(           endStrategy = drugExit(             conceptSet = x,             persistenceWindow = persistenceWindow           )         ),         era = era(studyStartDate = studyStartDate, studyEndDate = studyEndDate)       )     })          names(ch) <- paste0(\"cohort_\", seq_along(ch))          tic()           cdm <- generateCohortSet(cdm = cdm,                              cohortSet = ch,                               name = paste0(\"capr_cohorts_\", j),                              overwrite = TRUE)             t <- toc(quiet = TRUE)      time_record[[paste0(\"CapR number of cohorts\", j)]] <-c(\"timeTaken\" = as.numeric(t$toc - t$tic))      }         return(time_record)    }  time_record_cprdgold_capr <- benchmarkCapr(   cdm = cdm,   numberOfCohort = c(1:20),   conceptSetList = ingredientCodes)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"create-mock-data-first","dir":"Articles","previous_headings":"","what":"Create mock data first","title":"Use DrugUtilisation to create cohort","text":"","code":"library(DrugUtilisation) library(CodelistGenerator) library(CDMConnector) library(dplyr) con <- DBI::dbConnect(duckdb::duckdb(), \":memory:\") connectionDetails <- list(   con = con,   writeSchema = \"main\",   cdmPrefix = NULL,   writePrefix = NULL ) cdm <- mockDrugUtilisation(   connectionDetails = connectionDetails,   numberIndividual = 100 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"get-concept-code-for-cohort-generation","dir":"Articles","previous_headings":"","what":"Get concept code for cohort generation","title":"Use DrugUtilisation to create cohort","text":"generate cohort, need concept list, can obtained different ways. Get json file. Use concept code directly. Get ingredient Get ATC code get json file, function readConceptList() codesFromConceptSet() can used. list can created manually target codes: certain ingredient interest, code can also obtained getDrugIngredientCodes() CodelistGenerator. ATC code can also obtained, using getATCCodes() CodelistGenerator.","code":"#get concept from json file using readConceptList from this package or CodelistGenerator conceptSet_json_1 <- readConceptList(here::here(\"inst/Concept\"), cdm) conceptSet_json_2 <- codesFromConceptSet(here::here(\"inst/Concept\"), cdm)  conceptSet_json_1 #> $asthma #> [1] 317009 conceptSet_json_2 #> $asthma #> [1] 317009 #get concept using code directly conceptSet_code <- list(asthma = 317009) conceptSet_code #> $asthma #> [1] 317009 #get concept by ingredient conceptSet_ingredient <- getDrugIngredientCodes(cdm, name = \"simvastatin\") conceptSet_ingredient #> $simvastatin #> [1] 1539403 1539462 1539463 #get concept from ATC codes conceptSet_ATC <- getATCCodes(cdm,                                level = \"ATC 1st\",                                name = \"ALIMENTARY TRACT AND METABOLISM\") conceptSet_ATC #> $alimentary_tract_and_metabolism #> [1] 35897399"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"create-cohort","dir":"Articles","previous_headings":"","what":"Create cohort","title":"Use DrugUtilisation to create cohort","text":"Now conceptSet, can proceed generate cohort. two functions package generate cohort: generateConceptCohortSet: generate cohort certain list concepts, drug. function exported CDMConnector generateDrugUtilisationCohortSet: generate cohort drug use","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"generateconceptcohortset","dir":"Articles","previous_headings":"Create cohort","what":"generateConceptCohortSet()","title":"Use DrugUtilisation to create cohort","text":"First, let’s use generateConceptCohortSet get asthma cohort using conceptSet_code, also give output changed conceptSet_json_1 conceptSet_json_2, using concept code. count cohort can assessed using cohortCount() CDMConnector Cohort attrition can assessed using cohortAttrition() CDMConnector end parameter set cohort end date defined. Now changed event end date demonstrate difference previous observation period end date. See now cohort_end_date different: requiredObservation parameter numeric vector length 2, defines number days required observation time prior index post index event included cohort. Let’s check now see reducing required observation affect asthma_1 cohort.","code":"cdm <- generateConceptCohortSet(cdm,   conceptSet = conceptSet_code,   name = \"asthma_1\",   end = \"observation_period_end_date\",   requiredObservation = c(10, 10),   overwrite = TRUE ) cdm$asthma_1 #> # Source:   table<asthma_1> [?? x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    1         89 2017-05-28        2018-11-06      #>  2                    1         17 2008-01-04        2008-07-12      #>  3                    1         65 2003-01-28        2007-02-25      #>  4                    1         11 2021-02-26        2022-04-07      #>  5                    1         83 2017-10-12        2022-06-22      #>  6                    1         59 2020-11-09        2021-03-21      #>  7                    1          4 2004-11-18        2010-04-28      #>  8                    1         33 2021-01-09        2021-03-01      #>  9                    1         56 2009-05-13        2014-10-12      #> 10                    1          2 2018-10-31        2018-11-15      #> # ℹ more rows cohortCount(cdm$asthma_1) #> # A tibble: 1 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1             45              45 cohortAttrition(cdm$asthma_1) #> # A tibble: 1 × 7 #>   cohort_definition_id number_records number_subjects reason_id reason           #>                  <int>          <dbl>           <dbl>     <dbl> <chr>            #> 1                    1             45              45         1 Qualifying init… #> # ℹ 2 more variables: excluded_records <dbl>, excluded_subjects <dbl> cdm <- generateConceptCohortSet(cdm,   conceptSet = conceptSet_code,   name = \"asthma_2\",   end = \"event_end_date\",   requiredObservation = c(10, 10),   overwrite = TRUE ) cdm$asthma_2 #> # Source:   table<asthma_2> [?? x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    1         87 2019-06-24        2022-02-19      #>  2                    1         95 2016-04-09        2021-11-10      #>  3                    1         20 2001-09-16        2004-07-15      #>  4                    1         68 2021-08-21        2022-03-05      #>  5                    1         26 2018-06-25        2019-11-09      #>  6                    1         41 2005-07-25        2005-12-21      #>  7                    1         73 2009-10-02        2009-12-16      #>  8                    1         81 1990-02-18        1990-10-01      #>  9                    1         29 2021-05-27        2021-06-07      #> 10                    1          5 1978-07-01        1981-04-12      #> # ℹ more rows cdm <- generateConceptCohortSet(cdm,   conceptSet = conceptSet_code,   name = \"asthma_3\",   end = \"observation_period_end_date\",   requiredObservation = c(1, 1),   overwrite = TRUE ) cdm$asthma_3 #> # Source:   table<asthma_3> [?? x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    1         87 2019-06-24        2022-11-05      #>  2                    1         95 2016-04-09        2022-05-13      #>  3                    1         41 2005-07-25        2006-11-18      #>  4                    1         73 2009-10-02        2011-08-12      #>  5                    1         24 2022-06-06        2022-07-04      #>  6                    1         26 2018-06-25        2020-10-21      #>  7                    1         20 2001-09-16        2014-10-05      #>  8                    1         68 2021-08-21        2022-11-01      #>  9                    1          5 1978-07-01        1995-01-31      #> 10                    1         81 1990-02-18        2005-03-24      #> # ℹ more rows  cohortCount(cdm$asthma_3) #> # A tibble: 1 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1             48              48  cohortAttrition(cdm$asthma_3) #> # A tibble: 1 × 7 #>   cohort_definition_id number_records number_subjects reason_id reason           #>                  <int>          <dbl>           <dbl>     <dbl> <chr>            #> 1                    1             48              48         1 Qualifying init… #> # ℹ 2 more variables: excluded_records <dbl>, excluded_subjects <dbl>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"generatedrugutilisationcohortset","dir":"Articles","previous_headings":"Create cohort","what":"generateDrugUtilisationCohortSet()","title":"Use DrugUtilisation to create cohort","text":"Now let’s try function DrugUtilisation::generateDrugUtilisationCohortSet() get drug cohort ingredient simvastatin. function lot options can set. first use default settings:","code":"cdm <- generateDrugUtilisationCohortSet(cdm,   name = \"dus_alleras\",   conceptSet = conceptSet_ingredient ) cdm$dus_alleras #> # Source:   table<dus_alleras> [?? x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <dbl>      <int> <date>            <date>          #>  1                    1         57 2020-09-14        2020-11-26      #>  2                    1         89 2018-08-26        2018-11-02      #>  3                    1         29 2020-10-11        2021-02-07      #>  4                    1         27 2019-02-26        2020-06-10      #>  5                    1         57 2020-06-19        2020-08-21      #>  6                    1         77 1966-12-10        1967-02-03      #>  7                    1         80 2022-08-31        2022-09-07      #>  8                    1         84 2010-08-15        2017-05-13      #>  9                    1         90 2001-06-18        2005-07-05      #> 10                    1         18 1995-07-25        1998-05-27      #> # ℹ more rows  cohortCount(cdm$dus_alleras) #> # A tibble: 1 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1             53              48  cohortAttrition(cdm$dus_alleras) %>% select(number_records, reason, excluded_records, excluded_subjects) #> # A tibble: 7 × 4 #>   number_records reason                       excluded_records excluded_subjects #>            <dbl> <chr>                                   <dbl>             <dbl> #> 1             58 Qualifying initial records                  0                 0 #> 2             58 Duration imputation; affect…                0                 0 #> 3             53 Join eras                                   5                 0 #> 4             53 prior use washout of 0 days                 0                 0 #> 5             53 at least 0 prior observation                0                 0 #> 6             53 cohort_start_date >= NA                     0                 0 #> 7             53 cohort_end_date <= NA                       0                 0"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"imputeduration-and-durationrange","dir":"Articles","previous_headings":"Create cohort > generateDrugUtilisationCohortSet()","what":"imputeDuration and durationRange","title":"Use DrugUtilisation to create cohort","text":"parameter durationRange specifies range within duration must fall, duration = end date - start date + 1. Default c(1, Inf). numeric vector length two, NAs first value equal smaller second one. Duration values outside durationRange imputed using imputeDuration. can ne set : “none”, “median”, “mean”, “mode” integer (count).","code":"cdm <- generateDrugUtilisationCohortSet(cdm,   name = \"dus_step2_0_inf\",   conceptSet = conceptSet_ingredient,   imputeDuration = \"none\",   durationRange = c(0, Inf) # default as c(1, Inf) )  cohortAttrition(cdm$dus_step2_0_inf) %>% select(number_records, reason, excluded_records, excluded_subjects) #> # A tibble: 7 × 4 #>   number_records reason                       excluded_records excluded_subjects #>            <dbl> <chr>                                   <dbl>             <dbl> #> 1             58 Qualifying initial records                  0                 0 #> 2             58 Duration imputation; affect…                0                 0 #> 3             53 Join eras                                   5                 0 #> 4             53 prior use washout of 0 days                 0                 0 #> 5             53 at least 0 prior observation                0                 0 #> 6             53 cohort_start_date >= NA                     0                 0 #> 7             53 cohort_end_date <= NA                       0                 0"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"gapera","dir":"Articles","previous_headings":"Create cohort > generateDrugUtilisationCohortSet()","what":"gapEra","title":"Use DrugUtilisation to create cohort","text":"gapEra parameter defines number days two continuous drug exposures considered era. Now let’s change 0 larger number. dus_step3_alleras cohort attrition, can see joining era STEP 3, resulted less records, compared dus_step2_0_inf cohort, exposures less 30 days gaps joined.","code":"cdm <- generateDrugUtilisationCohortSet(cdm,   name = \"dus_step3_alleras\",   conceptSet = conceptSet_ingredient,   imputeDuration = \"none\",   durationRange = c(0, Inf),   gapEra = 30 # default as 0 )  cohortAttrition(cdm$dus_step3_alleras) %>% select(number_records, reason, excluded_records, excluded_subjects) #> # A tibble: 7 × 4 #>   number_records reason                       excluded_records excluded_subjects #>            <dbl> <chr>                                   <dbl>             <dbl> #> 1             58 Qualifying initial records                  0                 0 #> 2             58 Duration imputation; affect…                0                 0 #> 3             51 Join eras                                   7                 0 #> 4             51 prior use washout of 0 days                 0                 0 #> 5             51 at least 0 prior observation                0                 0 #> 6             51 cohort_start_date >= NA                     0                 0 #> 7             51 cohort_end_date <= NA                       0                 0"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"priorusewashout","dir":"Articles","previous_headings":"Create cohort > generateDrugUtilisationCohortSet()","what":"priorUseWashout","title":"Use DrugUtilisation to create cohort","text":"priorUseWashout parameter specifiesthe number prior days without exposure (often termed ‘washout’) required. default, set NULL, meaning washout period necessary. example provided, observe reduction number records STEP 4 cohort dus_alleras_step4 due washout period required, compared dus_step3_alleras cohort.","code":"cdm <- generateDrugUtilisationCohortSet(cdm,   name = \"dus_alleras_step4\",   conceptSet = conceptSet_ingredient,   imputeDuration = \"none\",   durationRange = c(0, Inf),   gapEra = 30,   priorUseWashout = 30 )  cohortAttrition(cdm$dus_alleras_step4) %>% select(number_records, reason, excluded_records, excluded_subjects) #> # A tibble: 7 × 4 #>   number_records reason                       excluded_records excluded_subjects #>            <dbl> <chr>                                   <dbl>             <dbl> #> 1             58 Qualifying initial records                  0                 0 #> 2             58 Duration imputation; affect…                0                 0 #> 3             51 Join eras                                   7                 0 #> 4             51 prior use washout of 30 days                0                 0 #> 5             51 at least 0 prior observation                0                 0 #> 6             51 cohort_start_date >= NA                     0                 0 #> 7             51 cohort_end_date <= NA                       0                 0"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"priorobservation","dir":"Articles","previous_headings":"Create cohort > generateDrugUtilisationCohortSet()","what":"priorObservation","title":"Use DrugUtilisation to create cohort","text":"parameter priorObservation defines minimum number days prior observation necessary drug eras taken account. set NULL, drug eras required fall within observation_period. example, noticeable decrease number records dus_alleras_step5 cohort STEP 5 compared dus_alleras_step4 cohort.","code":"cdm <- generateDrugUtilisationCohortSet(cdm,   name = \"dus_alleras_step5\",   conceptSet = conceptSet_ingredient,   imputeDuration = \"none\",   durationRange = c(0, Inf),   gapEra = 30,   priorUseWashout = 30,   priorObservation = 30 )  cohortAttrition(cdm$dus_alleras_step5) %>% select(number_records, reason, excluded_records, excluded_subjects) #> # A tibble: 7 × 4 #>   number_records reason                       excluded_records excluded_subjects #>            <dbl> <chr>                                   <dbl>             <dbl> #> 1             58 Qualifying initial records                  0                 0 #> 2             58 Duration imputation; affect…                0                 0 #> 3             51 Join eras                                   7                 0 #> 4             51 prior use washout of 30 days                0                 0 #> 5             48 at least 30 prior observati…                3                 2 #> 6             48 cohort_start_date >= NA                     0                 0 #> 7             48 cohort_end_date <= NA                       0                 0"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"cohortdaterange","dir":"Articles","previous_headings":"Create cohort > generateDrugUtilisationCohortSet()","what":"cohortDateRange","title":"Use DrugUtilisation to create cohort","text":"cohortDateRange parameter defines range cohort_start_date cohort_end_date. following example, one can observe reduction STEP 6 STEP 7 due constraints imposed cohort start end dates.","code":"cdm <- generateDrugUtilisationCohortSet(cdm,   name = \"dus_alleras_step67\",   conceptSet = conceptSet_ingredient,   imputeDuration = \"none\",   durationRange = c(0, Inf),   gapEra = 30,   priorUseWashout = 30,   priorObservation = 30,   cohortDateRange = as.Date(c(\"2010-01-01\", \"2011-01-01\")),   limi = \"All\" )  cohortAttrition(cdm$dus_alleras_step67) %>% select(number_records, reason, excluded_records, excluded_subjects) #> # A tibble: 7 × 4 #>   number_records reason                       excluded_records excluded_subjects #>            <dbl> <chr>                                   <dbl>             <dbl> #> 1             58 Qualifying initial records                  0                 0 #> 2             58 Duration imputation; affect…                0                 0 #> 3             51 Join eras                                   7                 0 #> 4             51 prior use washout of 30 days                0                 0 #> 5             48 at least 30 prior observati…                3                 2 #> 6             34 cohort_start_date >= 2010-0…               14                14 #> 7              4 cohort_end_date <= 2011-01-…               30                28"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"limit-first-era-that-fulfills-the-criteria","dir":"Articles","previous_headings":"Create cohort > generateDrugUtilisationCohortSet()","what":"limit: First era that fulfills the criteria","title":"Use DrugUtilisation to create cohort","text":"Change limit parameter First observe impacts attrition dus_step8_firstera cohort comparison dus_alleras_step67 cohort. number records decreased STEP 8 First limit. gets first record fulfills criteria.","code":"cdm <- generateDrugUtilisationCohortSet(cdm,   name = \"dus_step8_firstera\",   conceptSet = conceptSet_ingredient,   imputeDuration = \"none\",   durationRange = c(0, Inf),   gapEra = 30,   priorUseWashout = 30,   priorObservation = 30,   cohortDateRange = as.Date(c(\"2010-01-01\", \"2011-01-01\")),   limit = \"First\" )  cohortAttrition(cdm$dus_step8_firstera) %>% select(number_records, reason, excluded_records, excluded_subjects) #> # A tibble: 8 × 4 #>   number_records reason                       excluded_records excluded_subjects #>            <dbl> <chr>                                   <dbl>             <dbl> #> 1             58 Qualifying initial records                  0                 0 #> 2             58 Duration imputation; affect…                0                 0 #> 3             51 Join eras                                   7                 0 #> 4             51 prior use washout of 30 days                0                 0 #> 5             48 at least 30 prior observati…                3                 2 #> 6             34 cohort_start_date >= 2010-0…               14                14 #> 7              4 cohort_end_date <= 2011-01-…               30                28 #> 8              4 Limit to first era                          0                 0"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/introCreateCohort.html","id":"limit-first-ever-era","dir":"Articles","previous_headings":"Create cohort > generateDrugUtilisationCohortSet()","what":"limit: First ever era","title":"Use DrugUtilisation to create cohort","text":"parameter limit allows First. First value represents first era meets criteria set parameters prior limit. However, goal get first-ever era, can achieved using function . Setting following parameter result first ever drug era: Constructing concept sets generating various cohorts initial steps conducting drug utilization study. guidance using getting information like characteristics cohorts, please refer vignettes.","code":"cdm <- generateDrugUtilisationCohortSet(cdm,   name = \"dus_step8_firstever\",   conceptSet = conceptSet_ingredient,   imputeDuration = \"none\",   durationRange = c(0, Inf),   gapEra = 0,   priorUseWashout = Inf,   priorObservation = 0,   cohortDateRange = as.Date(c(NA, NA)),   limit = \"First\" ) DBI::dbDisconnect(con, shutdown = TRUE)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"adding-routes-with-addroute-function","dir":"Articles","previous_headings":"","what":"Adding Routes with addRoute Function","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"enrich drug data, DrugUtilisation package provides addRoute function. function utilizes internal CSV file containing possible routes various drug dose forms supported package. addRoute function designed seamlessly incorporate route information drug table supported dose forms. example , mock database generated using mockDrugUtilisation function, addRoute function applied demonstrate process:","code":"library(DrugUtilisation) con <- DBI::dbConnect(duckdb::duckdb(), \":memory:\") connectionDetails <- list(   con = con,   writeSchema = \"main\",   cdmPrefix = NULL,   writePrefix = NULL ) cdm <- mockDrugUtilisation(   connectionDetails = connectionDetails,   numberIndividual = 100 ) # Add route information to the drug table addRoute(cdm$drug_exposure) ## # Source:   SQL [?? x 8] ## # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] ##    drug_exposure_id person_id drug_concept_id drug_exposure_start_date ##               <int>     <int>           <dbl> <date>                   ##  1                2         1         1516980 2001-02-27               ##  2                3         2         1516980 2018-03-08               ##  3                4         2         1516978 2018-05-28               ##  4                5         2         1516978 2018-06-14               ##  5                6         2         1539463 2017-07-03               ##  6                8         3        43135274 1996-09-13               ##  7               11         4         1503328 2007-05-14               ##  8               12         4         1125360 2004-12-26               ##  9               13         5         1539463 1986-08-21               ## 10               14         5         1503328 1979-06-27               ## # ℹ more rows ## # ℹ 4 more variables: drug_exposure_end_date <date>, ## #   drug_type_concept_id <dbl>, quantity <dbl>, route <chr>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"generating-patterns-with-patterntable-function","dir":"Articles","previous_headings":"","what":"Generating Patterns with patternTable Function","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"patternTable function DrugUtilisation package powerful tool deriving patterns drug strength table. function extracts distinct patterns, associating pattern_id formula_id. resulting tibble provides valuable insights data: number_concepts: count distinct concepts patterns. number_ingredients: count distinct ingredients involved. number_records: overall count records patterns. Moreover, tibble includes column indicating potentially valid invalid combinations. detailed information patterns, associated formula, combinations amount_unit, numerator_unit, denominator_unit, can refer data:","code":"patternTable(cdm) ## # A tibble: 5 × 12 ##   pattern_id formula_name            validity number_concepts number_ingredients ##        <dbl> <chr>                   <chr>              <dbl>              <dbl> ## 1          9 fixed amount formulati… pattern…               7                  4 ## 2         18 concentration formulat… pattern…               1                  1 ## 3         24 concentration formulat… pattern…               1                  1 ## 4         40 concentration formulat… pattern…               1                  1 ## 5         NA NA                      no patt…               4                  4 ## # ℹ 7 more variables: number_records <dbl>, amount_numeric <dbl>, ## #   amount_unit_concept_id <dbl>, numerator_numeric <dbl>, ## #   numerator_unit_concept_id <dbl>, denominator_numeric <dbl>, ## #   denominator_unit_concept_id <dbl> patternsWithFormula"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"get-daily-dose","dir":"Articles","previous_headings":"","what":"Get daily dose","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"Now patterns formulas supported, computation daily doses can performed using addDailyDose function. function add data additional columns, including quantity, daily dose, unit, route. also function, dailyDoseCoverage, check coverage daily dose computation chosen concept sets ingredients.","code":"addDailyDose(   cdm$drug_exposure,   cdm = cdm,   ingredientConceptId = 1125315 ) ## # Source:   table<dbplyr_006> [?? x 9] ## # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] ##    drug_exposure_id person_id drug_concept_id drug_exposure_start_date ##               <int>     <int>           <dbl> <date>                   ##  1                8         3        43135274 1996-09-13               ##  2               12         4         1125360 2004-12-26               ##  3               17         7         1125360 1969-09-09               ##  4               23         8         2905077 2019-09-14               ##  5               24         9         1125360 2019-05-14               ##  6               27         9        43135274 2016-03-17               ##  7               34        12        43135274 2018-10-17               ##  8               35        13        43135274 1981-07-11               ##  9               40        14         1125360 1990-04-27               ## 10               49        19         2905077 2022-02-12               ## # ℹ more rows ## # ℹ 5 more variables: drug_exposure_end_date <date>, ## #   drug_type_concept_id <dbl>, quantity <dbl>, daily_dose <dbl>, unit <chr> suppressWarnings(dailyDoseCoverage(cdm, 1125315)) ## # A tibble: 73 × 9 ##    group_name      group_level  strata_name strata_level variable variable_level ##    <chr>           <chr>        <chr>       <chr>        <chr>    <chr>          ##  1 ingredient_name acetaminoph… Overall     Overall      number … NA             ##  2 ingredient_name acetaminoph… unit        milligram    number … NA             ##  3 ingredient_name acetaminoph… unit        milligram    daily_d… NA             ##  4 ingredient_name acetaminoph… unit        milligram    daily_d… NA             ##  5 ingredient_name acetaminoph… unit        milligram    daily_d… NA             ##  6 ingredient_name acetaminoph… unit        milligram    daily_d… NA             ##  7 ingredient_name acetaminoph… unit        milligram    daily_d… NA             ##  8 ingredient_name acetaminoph… unit        milligram    daily_d… NA             ##  9 ingredient_name acetaminoph… unit        milligram    daily_d… NA             ## 10 ingredient_name acetaminoph… unit        milligram    daily_d… NA             ## # ℹ 63 more rows ## # ℹ 3 more variables: variable_type <chr>, estimate_type <chr>, estimate <chr>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"adding-drug-usage-details-to-a-cohort-with-adddruguse","dir":"Articles","previous_headings":"","what":"Adding Drug Usage Details to a Cohort with addDrugUse","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"Additional drug usage details, including duration, initial dose, cumulative dose, etc., can incorporated cohort using addDrugUse function.","code":""},{"path":[]},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"duration-parameter","dir":"Articles","previous_headings":"Adding Drug Usage Details to a Cohort with addDrugUse > Parameters in addDrugUse Function","what":"duration Parameter","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"duration parameter boolean variable (TRUE/FALSE) determining whether include duration column. set TRUE, duration calculated cohort_end_date - cohort_start_date + 1. Additionally, column named impute_duration_percentage added, reporting percentage imputed duration. set imputation method duration, use imputeDuration parameter, can take values “none,” “median,” “mean,” “mode.” Define imputation range durationRange parameter, numeric vector length two, first value equal smaller second one.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"quantity-parameter","dir":"Articles","previous_headings":"Adding Drug Usage Details to a Cohort with addDrugUse > Parameters in addDrugUse Function","what":"quantity Parameter","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"quantity parameter, another boolean variable (TRUE/FALSE), controls inclusion quantity-related columns. set TRUE, columns initial quantity cumulative quantity added.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"dose-parameter","dir":"Articles","previous_headings":"Adding Drug Usage Details to a Cohort with addDrugUse > Parameters in addDrugUse Function","what":"dose Parameter","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"dose parameter, also boolean variable (TRUE/FALSE), governs addition daily dose-related columns. set TRUE, columns initial daily dose cumulative daily dose incorporated. Moreover, column named impute_daily_dose_percentage added, reporting percentage imputed daily dose. Similar duration imputation, use imputeDuration parameter set method imputing daily dose, options like “none,” “median,” “mean,” “mode.” Define imputation range dailyDoseRange parameter, numeric vector length two. parameters offer flexibility customizing drug usage details added cohort. example provided parameters set TRUE, utilizing drug ingredient acetaminophen.","code":"library(CodelistGenerator) cdm <- mockDrugUtilisation() cdm <- generateDrugUtilisationCohortSet(   cdm, \"dus_cohort\", getDrugIngredientCodes(cdm, \"acetaminophen\") ) cdm[[\"dus_cohort\"]] %>%   addDrugUse(cdm,              duration = TRUE,              quantity = TRUE,              dose = TRUE,              1125315) ## # Source:   table<dbplyr_047> [?? x 13] ## # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] ##    cohort_definition_id subject_id cohort_start_date cohort_end_date duration ##                   <dbl>      <int> <date>            <date>             <dbl> ##  1                    1          7 2018-05-21        2018-07-20            61 ##  2                    1          2 2022-06-06        2022-06-07             2 ##  3                    1          7 2016-02-01        2017-10-04           612 ##  4                    1          1 2021-02-25        2021-03-11            15 ##  5                    1          4 2021-05-05        2021-12-15           225 ##  6                    1          5 2014-07-28        2019-11-20          1942 ##  7                    1          9 2022-09-11        2022-11-09            60 ##  8                    1          2 2022-05-24        2022-06-02            10 ##  9                    1          3 2009-04-18        2009-11-07           204 ## 10                    1          6 1991-01-28        1991-09-17           233 ## # ℹ more rows ## # ℹ 8 more variables: number_exposures <dbl>, cumulative_quantity <dbl>, ## #   initial_quantity <dbl>, impute_duration_percentage <dbl>, ## #   number_eras <dbl>, impute_daily_dose_percentage <dbl>, ## #   initial_daily_dose_milligram <dbl>, cumulative_dose_milligram <dbl>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"parameters-for-joining-exposures","dir":"Articles","previous_headings":"Adding Drug Usage Details to a Cohort with addDrugUse","what":"Parameters for Joining Exposures","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"Finally, way continuous exposures joined can configured using following parameters:","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"gapera-this-parameter-sets-the-number-of-days-between-two-continuous-exposures-to-be-considered-in-the-same-era-","dir":"Articles","previous_headings":"Adding Drug Usage Details to a Cohort with addDrugUse > Parameters for Joining Exposures","what":"gapEra: This parameter sets the number of days between two continuous exposures to be considered in the same era.","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"","code":"If the previous exposure's end date minus the next exposure's start date is less than or equal to the specified `gapEra`, these two exposures will be joined."},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"erajoinmode-this-parameter-defines-how-two-different-continuous-exposures-are-joined-in-an-era--there-are-four-options","dir":"Articles","previous_headings":"Adding Drug Usage Details to a Cohort with addDrugUse > Parameters for Joining Exposures","what":"eraJoinMode: This parameter defines how two different continuous exposures are joined in an era. There are four options:","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"","code":"- \"zero\": Exposures are joined, considering that the period between both continuous exposures means the subject is treated with a daily dose of zero. The time between both exposures contributes to the total exposed time. - \"join\": Exposures are joined, considering that the period between both continuous exposures means the subject is treated with a daily dose of zero. The time between both exposures does not contribute to the total exposed time. - \"previous\": Exposures are joined, considering that the period between both continuous exposures means the subject is treated with the daily dose of the previous subexposure. The time between both exposures contributes to the total exposed time. - \"subsequent\": Exposures are joined, considering that the period between both continuous exposures means the subject is treated with the daily dose of the subsequent subexposure. The time between both exposures contributes to the total exposed time."},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"overlapmode-this-parameter-defines-how-the-overlapping-between-two-exposures-that-do-not-start-on-the-same-day-is-resolved-inside-a-subexposure--there-are-five-possible-options","dir":"Articles","previous_headings":"Adding Drug Usage Details to a Cohort with addDrugUse > Parameters for Joining Exposures","what":"overlapMode: This parameter defines how the overlapping between two exposures that do not start on the same day is resolved inside a subexposure. There are five possible options:","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"","code":"- \"previous\": The considered daily dose is that of the earliest exposure. - \"subsequent\": The considered daily dose is that of the new exposure that starts in that subexposure. - \"minimum\": The considered daily dose is the minimum of all the exposures in the subexposure. - \"maximum\": The considered daily dose is the maximum of all the exposures in the subexposure. - \"sum\": The considered daily dose is the sum of all the exposures present in the subexposure."},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/routePatternDose.html","id":"sameindexmode-this-parameter-defines-how-the-overlapping-between-two-exposures-that-start-on-the-same-day-is-resolved-inside-a-subexposure--there-are-three-possible-options","dir":"Articles","previous_headings":"Adding Drug Usage Details to a Cohort with addDrugUse > Parameters for Joining Exposures","what":"sameIndexMode: This parameter defines how the overlapping between two exposures that start on the same day is resolved inside a subexposure. There are three possible options:","title":"Guide on using DrugUtilisataion package to compute drug use related information","text":"example, following settings maximum gap 30 days exposures joined. uses daily dose previous subexposure joining exposures, employs minimum daily dose exposures starting day, considers minimum daily dose exposures overlap.","code":"- \"minimum\": The considered daily dose is the minimum of all the exposures in the subexposure. - \"maximum\": The considered daily dose is the maximum of all the exposures in the subexposure. - \"sum\": The considered daily dose is the sum of all the exposures present in the subexposure. cdm[[\"dus_cohort\"]] %>%   addDrugUse(cdm,              ingredientConceptId = 1125315,              gapEra = 30,              eraJoinMode = \"previous\",              overlapMode = \"minimum\",              sameIndexMode = \"minimum\") ## # Source:   table<dbplyr_067> [?? x 13] ## # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] ##    cohort_definition_id subject_id cohort_start_date cohort_end_date duration ##                   <dbl>      <int> <date>            <date>             <dbl> ##  1                    1          7 2018-05-21        2018-07-20            61 ##  2                    1          2 2022-06-06        2022-06-07             2 ##  3                    1          7 2016-02-01        2017-10-04           612 ##  4                    1          1 2021-02-25        2021-03-11            15 ##  5                    1          4 2021-05-05        2021-12-15           225 ##  6                    1          5 2014-07-28        2019-11-20          1942 ##  7                    1          9 2022-09-11        2022-11-09            60 ##  8                    1          2 2022-05-24        2022-06-02            10 ##  9                    1          3 2009-04-18        2009-11-07           204 ## 10                    1          6 1991-01-28        1991-09-17           233 ## # ℹ more rows ## # ℹ 8 more variables: number_exposures <dbl>, cumulative_quantity <dbl>, ## #   initial_quantity <dbl>, impute_duration_percentage <dbl>, ## #   number_eras <dbl>, impute_daily_dose_percentage <dbl>, ## #   initial_daily_dose_milligram <dbl>, cumulative_dose_milligram <dbl> DBI::dbDisconnect(con, shutdown = TRUE)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marti Catala. Author, maintainer. Mike Du. Author. Yuchen Guo. Author. Kim Lopez-Guell. Author. Edward Burn. Contributor. Xintong Li. Contributor.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Catala M, Du M, Guo Y, Lopez-Guell K (2023). DrugUtilisation: Summarise Patient-Level Drug Utilisation Data Mapped OMOP Common Data Model. R package version 0.4.1, https://darwin-eu-dev.github.io/DrugUtilisation/.","code":"@Manual{,   title = {DrugUtilisation: Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP Common Data Model},   author = {Marti Catala and Mike Du and Yuchen Guo and Kim Lopez-Guell},   year = {2023},   note = {R package version 0.4.1},   url = {https://darwin-eu-dev.github.io/DrugUtilisation/}, }"},{"path":[]},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"warning-this-package-is-under-development","dir":"","previous_headings":"","what":"WARNING: This package is under development.","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"addDailyDose function works following patterns drug_strength table:","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"package-overview","dir":"","previous_headings":"","what":"Package overview","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"DrugUtilisation contains functions instantiate characterize cohorts used Drug Utilisation Study OMOP common data model. Main functionalities : Create DrugUtilisation cohorts Add indications cohort Add dosage certain ingredient (subseted list drugs) Calculate daily dose Create Concept based cohorts Read concepts json files Summarise drug use certain cohort Summarise indications certain cohort Summarise patients characteristics certain cohort Summarise patients large scale characterics certain cohort","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"First, need create cdm reference data ´ll using. ´ll generate example simulated data, see set database please consult CDMConnector package connection examples. package also provides functionality generate mockDrugUtilisation cdm reference:","code":"library(DrugUtilisation) cdm <- mockDrugUtilisation(numberIndividual = 100)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"create-a-cohort-of-drug-use","dir":"","previous_headings":"Example","what":"Create a cohort of drug use","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"create cohort need conceptList, can read json files: can build list using packages (e.g. CodelistGenerator) generate cohort drug use use generateDrugUtilisationCohortSet:","code":"conceptList <- readConceptList(here::here(\"Concepts\"), cdm) library(CodelistGenerator) conceptList <- getDrugIngredientCodes(cdm, \"acetaminophen\") conceptList #> $`Ingredient: acetaminophen (1125315)` #> [1]  1125315  1125360  2905077 43135274 cdm <- generateDrugUtilisationCohortSet(   cdm = cdm,   name = \"dus_cohort\",   conceptSet = conceptList,   limit = \"first\",   priorObservation = 365,   gapEra = 30,   priorUseWashout = 0,   imputeDuration = \"none\",    durationRange = c(0, Inf) )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"cohort-attributes","dir":"","previous_headings":"Example > Create a cohort of drug use","what":"Cohort attributes","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"generated cohort GeneratedCohortSet seen CDMConnector Cohort set: Cohort count: Cohort attrition:","code":"class(cdm[[\"dus_cohort\"]]) #> [1] \"GeneratedCohortSet\"    \"tbl_duckdb_connection\" \"tbl_dbi\"               #> [4] \"tbl_sql\"               \"tbl_lazy\"              \"tbl\" library(CDMConnector) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union cohortSet(cdm[[\"dus_cohort\"]]) %>% glimpse() #> Rows: 1 #> Columns: 11 #> $ cohort_definition_id    <int> 1 #> $ cohort_name             <chr> \"Ingredient: acetaminophen (1125315)\" #> $ limit                   <chr> \"first\" #> $ prior_observation       <chr> \"365\" #> $ gap_era                 <chr> \"30\" #> $ prior_use_washout       <chr> \"0\" #> $ cohort_date_range_start <chr> NA #> $ cohort_date_range_end   <chr> NA #> $ impute_duration         <chr> \"none\" #> $ duration_range_min      <chr> \"0\" #> $ duration_range_max      <chr> \"Inf\" cohortCount(cdm[[\"dus_cohort\"]]) #> # A tibble: 1 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1             35              35 cohortAttrition(cdm[[\"dus_cohort\"]]) %>% glimpse() #> Rows: 8 #> Columns: 7 #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1 #> $ number_records       <dbl> 90, 90, 70, 70, 41, 41, 41, 35 #> $ number_subjects      <dbl> 62, 62, 62, 62, 35, 35, 35, 35 #> $ reason_id            <dbl> 1, 2, 3, 4, 5, 6, 7, 8 #> $ reason               <chr> \"Qualifying initial records\", \"Duration imputatio… #> $ excluded_records     <dbl> 0, 0, 20, 0, 29, 0, 0, 6 #> $ excluded_subjects    <dbl> 0, 0, 0, 0, 27, 0, 0, 0"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"indication","dir":"","previous_headings":"Example","what":"Indication","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"Indications always cohorts. option package create concept based cohorts using generateConceptCohortSet. can add indication using function addIndication. add new column indication gap indication. can combine indications single column using indicationToStrata() function. column can used stratification results needed:","code":"indications <- list(headache = 378253, influenza = 4266367) cdm <- generateConceptCohortSet(cdm, indications, \"indications_cohort\") cohortCount(cdm[[\"indications_cohort\"]]) #> # A tibble: 2 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    2             46              46 #> 2                    1             52              52 x <- cdm[[\"dus_cohort\"]] %>%   addIndication(     cdm = cdm, indicationCohortName = \"indications_cohort\", indicationGap = c(0, 30, 365),      unknownIndicationTable = c(\"condition_occurrence\")   ) glimpse(x) #> Rows: ?? #> Columns: 16 #> Database: DuckDB 0.9.0 [martics@Windows 10 x64:R 4.2.3/:memory:] #> $ cohort_definition_id         <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ subject_id                   <dbl> 7, 48, 57, 77, 3, 58, 73, 23, 40, 45, 51,… #> $ cohort_start_date            <date> 1969-09-09, 1972-04-14, 2020-04-17, 1967… #> $ cohort_end_date              <date> 1970-02-14, 1972-12-18, 2020-11-19, 1967… #> $ indication_gap_0_influenza   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_0_headache    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_0_none        <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ indication_gap_30_headache   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_30_influenza  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_30_none       <dbl> 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ indication_gap_365_headache  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,… #> $ indication_gap_365_influenza <dbl> 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_365_none      <dbl> 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,… #> $ indication_gap_0_unknown     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_30_unknown    <dbl> 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_365_unknown   <dbl> 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,… x <- x %>% indicationToStrata(keep = TRUE) glimpse(x) #> Rows: ?? #> Columns: 19 #> Database: DuckDB 0.9.0 [martics@Windows 10 x64:R 4.2.3/:memory:] #> $ cohort_definition_id         <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ subject_id                   <dbl> 7, 48, 57, 77, 3, 58, 73, 23, 40, 45, 51,… #> $ cohort_start_date            <date> 1969-09-09, 1972-04-14, 2020-04-17, 1967… #> $ cohort_end_date              <date> 1970-02-14, 1972-12-18, 2020-11-19, 1967… #> $ indication_gap_0_influenza   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_0_headache    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_0_none        <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ indication_gap_30_headache   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_30_influenza  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_30_none       <dbl> 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ indication_gap_365_headache  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,… #> $ indication_gap_365_influenza <dbl> 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_365_none      <dbl> 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,… #> $ indication_gap_0_unknown     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_30_unknown    <dbl> 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_365_unknown   <dbl> 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,… #> $ indication_gap_0             <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"… #> $ indication_gap_30            <chr> \"None\", \"None\", \"None\", \"Unknown\", \"None\"… #> $ indication_gap_365           <chr> \"None\", \"None\", \"Influenza\", \"Unknown\", \"… table(x %>% pull(\"indication_gap_365\")) #>  #>  Headache Influenza      None   Unknown  #>         2         3        27         3"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"summarise-the-indication","dir":"","previous_headings":"Example","what":"Summarise the indication","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"can summarise indication results using summariseIndication function:","code":"summariseIndication(x, cdm) #> # A tibble: 40 × 11 #>    group_name  group_level      strata_name strata_level variable variable_level #>    <chr>       <chr>            <chr>       <chr>        <chr>    <chr>          #>  1 cohort_name Ingredient: ace… Overall     Overall      number … <NA>           #>  2 cohort_name Ingredient: ace… Overall     Overall      number … <NA>           #>  3 cohort_name Ingredient: ace… Overall     Overall      Indicat… Influenza      #>  4 cohort_name Ingredient: ace… Overall     Overall      Indicat… Influenza      #>  5 cohort_name Ingredient: ace… Overall     Overall      Indicat… Headache       #>  6 cohort_name Ingredient: ace… Overall     Overall      Indicat… Headache       #>  7 cohort_name Ingredient: ace… Overall     Overall      Indicat… None           #>  8 cohort_name Ingredient: ace… Overall     Overall      Indicat… None           #>  9 cohort_name Ingredient: ace… Overall     Overall      Indicat… Headache       #> 10 cohort_name Ingredient: ace… Overall     Overall      Indicat… Headache       #> # ℹ 30 more rows #> # ℹ 5 more variables: variable_type <chr>, estimate_type <chr>, estimate <chr>, #> #   cdm_name <chr>, result_type <chr> summariseIndication(x, cdm) %>% glimpse() #> Rows: 40 #> Columns: 11 #> $ group_name     <chr> \"cohort_name\", \"cohort_name\", \"cohort_name\", \"cohort_na… #> $ group_level    <chr> \"Ingredient: acetaminophen (1125315)\", \"Ingredient: ace… #> $ strata_name    <chr> \"Overall\", \"Overall\", \"Overall\", \"Overall\", \"Overall\", … #> $ strata_level   <chr> \"Overall\", \"Overall\", \"Overall\", \"Overall\", \"Overall\", … #> $ variable       <chr> \"number subjects\", \"number records\", \"Indication on ind… #> $ variable_level <chr> NA, NA, \"Influenza\", \"Influenza\", \"Headache\", \"Headache… #> $ variable_type  <chr> NA, NA, \"binary\", \"binary\", \"binary\", \"binary\", \"binary… #> $ estimate_type  <chr> \"count\", \"count\", \"count\", \"percentage\", \"count\", \"perc… #> $ estimate       <chr> \"35\", \"35\", \"0\", \"0\", \"0\", \"0\", \"35\", \"100\", \"0\", \"0\", … #> $ cdm_name       <chr> \"DUS MOCK\", \"DUS MOCK\", \"DUS MOCK\", \"DUS MOCK\", \"DUS MO… #> $ result_type    <chr> \"Summary indication\", \"Summary indication\", \"Summary in…"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"add-strata","dir":"","previous_headings":"Example","what":"Add strata","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"summarise functions option add strata. Strata always point preexisting columns. can see example create age_group sex columns using PatientProfiles use strata","code":"library(PatientProfiles) x <- x %>%   addAge(cdm, ageGroup = list(c(0, 19), c(20, 39), c(40, 59), c(60, 79), c(80, 150))) %>%   addSex(cdm) summariseIndication(x, cdm, strata = list(\"age_group\", \"sex\", c(\"age_group\", \"sex\"))) #> # A tibble: 440 × 11 #>    group_name  group_level      strata_name strata_level variable variable_level #>    <chr>       <chr>            <chr>       <chr>        <chr>    <chr>          #>  1 cohort_name Ingredient: ace… Overall     Overall      number … <NA>           #>  2 cohort_name Ingredient: ace… Overall     Overall      number … <NA>           #>  3 cohort_name Ingredient: ace… Overall     Overall      Indicat… Influenza      #>  4 cohort_name Ingredient: ace… Overall     Overall      Indicat… Influenza      #>  5 cohort_name Ingredient: ace… Overall     Overall      Indicat… Headache       #>  6 cohort_name Ingredient: ace… Overall     Overall      Indicat… Headache       #>  7 cohort_name Ingredient: ace… Overall     Overall      Indicat… None           #>  8 cohort_name Ingredient: ace… Overall     Overall      Indicat… None           #>  9 cohort_name Ingredient: ace… Overall     Overall      Indicat… Headache       #> 10 cohort_name Ingredient: ace… Overall     Overall      Indicat… Headache       #> # ℹ 430 more rows #> # ℹ 5 more variables: variable_type <chr>, estimate_type <chr>, estimate <chr>, #> #   cdm_name <chr>, result_type <chr> summariseIndication(x, cdm, strata = list(\"age_group\", \"sex\", c(\"age_group\", \"sex\"))) %>% glimpse() #> Rows: 440 #> Columns: 11 #> $ group_name     <chr> \"cohort_name\", \"cohort_name\", \"cohort_name\", \"cohort_na… #> $ group_level    <chr> \"Ingredient: acetaminophen (1125315)\", \"Ingredient: ace… #> $ strata_name    <chr> \"Overall\", \"Overall\", \"Overall\", \"Overall\", \"Overall\", … #> $ strata_level   <chr> \"Overall\", \"Overall\", \"Overall\", \"Overall\", \"Overall\", … #> $ variable       <chr> \"number subjects\", \"number records\", \"Indication on ind… #> $ variable_level <chr> NA, NA, \"Influenza\", \"Influenza\", \"Headache\", \"Headache… #> $ variable_type  <chr> NA, NA, \"binary\", \"binary\", \"binary\", \"binary\", \"binary… #> $ estimate_type  <chr> \"count\", \"count\", \"count\", \"percentage\", \"count\", \"perc… #> $ estimate       <chr> \"35\", \"35\", \"0\", \"0\", \"0\", \"0\", \"35\", \"100\", \"0\", \"0\", … #> $ cdm_name       <chr> \"DUS MOCK\", \"DUS MOCK\", \"DUS MOCK\", \"DUS MOCK\", \"DUS MO… #> $ result_type    <chr> \"Summary indication\", \"Summary indication\", \"Summary in…"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"daily-dose","dir":"","previous_headings":"Example","what":"Daily dose","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"can compute daily dose certain ingredient subset drug_exposure whole drug exposure (can computationally expensive).","code":"#cdm[[\"drug_exposure\"]] %>% #  addDailyDose(ingredientConceptId = 1125315) %>% #  glimpse()"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"coverage","dir":"","previous_headings":"Example > Daily dose","what":"Coverage","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"Currently can evaluate coverage daily dose conceptList overall using dailyDoseCoverage. can restrict certain ingredient, otherwise result stratified ingredient.","code":"#dailyDoseCoverage(cdm = cdm, sample = NULL, ingredient = NULL, conceptList = NULL)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"druguse","dir":"","previous_headings":"Example","what":"DrugUse","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"can add columns related drug use using addDrugUse. always provide reference ingredient.","code":"#x <- x %>% #  addDrugUse( #    cdm = cdm, #    ingredientConceptId = 1125315, #    initialDailyDose = TRUE, #    numberExposures = TRUE, #    duration = TRUE, #    cumulativeDose = TRUE, #    numberEras = TRUE #  )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"summarise-the-drug-use","dir":"","previous_headings":"Example","what":"Summarise the drug use","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"can summarise drug use using summariseDrugUse function","code":"#summariseDrugUse(x, cdm)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"summarise-patient-characteristics","dir":"","previous_headings":"Example","what":"Summarise patient characteristics","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"can summarise patient characteristics summariseCharacteristics function:","code":"summariseCharacteristics(   x, cdm, ageGroup = list(c(0, 24), c(25, 49), c(50, 74), c(75, 150)),   tableIntersect = list(     \"Visits\" = list(       tableName = \"visit_occurrence\", value = \"count\", window = c(-365, 0)     )   ),   cohortIntersect = list(     \"Indications\" = list(       targetCohortTable  = \"indications_cohort\", value = \"flag\",        window = c(-365, 0)     )   ) ) #> # A tibble: 46 × 11 #>    cdm_name result_type group_name group_level strata_name strata_level variable #>    <chr>    <chr>       <chr>      <chr>       <chr>       <chr>        <chr>    #>  1 DUS MOCK Summary ch… cohort_na… Ingredient… Overall     Overall      Number … #>  2 DUS MOCK Summary ch… cohort_na… Ingredient… Overall     Overall      Number … #>  3 DUS MOCK Summary ch… cohort_na… Ingredient… Overall     Overall      Cohort … #>  4 DUS MOCK Summary ch… cohort_na… Ingredient… Overall     Overall      Cohort … #>  5 DUS MOCK Summary ch… cohort_na… Ingredient… Overall     Overall      Cohort … #>  6 DUS MOCK Summary ch… cohort_na… Ingredient… Overall     Overall      Cohort … #>  7 DUS MOCK Summary ch… cohort_na… Ingredient… Overall     Overall      Cohort … #>  8 DUS MOCK Summary ch… cohort_na… Ingredient… Overall     Overall      Cohort … #>  9 DUS MOCK Summary ch… cohort_na… Ingredient… Overall     Overall      Cohort … #> 10 DUS MOCK Summary ch… cohort_na… Ingredient… Overall     Overall      Cohort … #> # ℹ 36 more rows #> # ℹ 4 more variables: variable_level <chr>, variable_type <chr>, #> #   estimate_type <chr>, estimate <chr>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"summarise-patients-large-scale-characteristics","dir":"","previous_headings":"Example","what":"Summarise patients large scale characteristics","title":"Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP \n    Common Data Model ","text":"can summarise patient characteristics summariseLargeScaleCharacteristics function:","code":"summariseLargeScaleCharacteristics(   cohort = x,    window = list(c(-Inf, Inf)),    eventInWindow = \"condition_occurrence\",    episodeInWindow = \"drug_exposure\" ) #> Warning in checkNewName(ageName, x): age already exists in x, it was renamed to #> age_1 #> Warning in checkNewName(sexName, x): sex already exists in x, it was renamed to #> sex_1 #> # A tibble: 26 × 14 #>    result_type          cdm_name group_name group_level strata_name strata_level #>    <chr>                <chr>    <chr>      <chr>       <chr>       <chr>        #>  1 Summarised Large Sc… DUS MOCK Cohort na… Ingredient… Overall     Overall      #>  2 Summarised Large Sc… DUS MOCK Cohort na… Ingredient… Overall     Overall      #>  3 Summarised Large Sc… DUS MOCK Cohort na… Ingredient… Overall     Overall      #>  4 Summarised Large Sc… DUS MOCK Cohort na… Ingredient… Overall     Overall      #>  5 Summarised Large Sc… DUS MOCK Cohort na… Ingredient… Overall     Overall      #>  6 Summarised Large Sc… DUS MOCK Cohort na… Ingredient… Overall     Overall      #>  7 Summarised Large Sc… DUS MOCK Cohort na… Ingredient… Overall     Overall      #>  8 Summarised Large Sc… DUS MOCK Cohort na… Ingredient… Overall     Overall      #>  9 Summarised Large Sc… DUS MOCK Cohort na… Ingredient… Overall     Overall      #> 10 Summarised Large Sc… DUS MOCK Cohort na… Ingredient… Overall     Overall      #> # ℹ 16 more rows #> # ℹ 8 more variables: table_name <chr>, type <chr>, analysis <chr>, #> #   concept <dbl>, variable <chr>, variable_level <chr>, estimate_type <chr>, #> #   estimate <chr>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/DrugUtilisation-package.html","id":null,"dir":"Reference","previous_headings":"","what":"DrugUtilisation: Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP Common Data Model — DrugUtilisation-package","title":"DrugUtilisation: Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP Common Data Model — DrugUtilisation-package","text":"Summarise patient-level drug utilisation cohorts using data mapped Observational Medical Outcomes Partnership (OMOP) common data model. New users prevalent users cohorts can generated characteristics, indication drug use summarised.","code":""},{"path":[]},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/DrugUtilisation-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DrugUtilisation: Summarise Patient-Level Drug Utilisation in Data Mapped to the OMOP Common Data Model — DrugUtilisation-package","text":"Maintainer: Marti Catala marti.catalasabate@ndorms.ox.ac.uk (ORCID) Authors: Mike Du mike.du@ndorms.ox.ac.uk (ORCID) Yuchen Guo yuchen.guo@ndorms.ox.ac.uk (ORCID) Kim Lopez-Guell kim.lopez@spc.ox.ac.uk (ORCID) contributors: Edward Burn edward.burn@ndorms.ox.ac.uk (ORCID) [contributor] Xintong Li xintong.li@ndorms.ox.ac.uk (ORCID) [contributor]","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addDailyDose.html","id":null,"dir":"Reference","previous_headings":"","what":"add daily dose information to a drug_exposure table — addDailyDose","title":"add daily dose information to a drug_exposure table — addDailyDose","text":"add daily dose information drug_exposure table","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addDailyDose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add daily dose information to a drug_exposure table — addDailyDose","text":"","code":"addDailyDose(   drugExposure,   cdm = attr(drugExposure, \"cdm_reference\"),   ingredientConceptId )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addDailyDose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add daily dose information to a drug_exposure table — addDailyDose","text":"drugExposure drugExposure must contain drug_concept_id, quantity, drug_exposure_start_date drug_exposure_end_date columns cdm cdm reference ingredientConceptId ingredientConceptId filter drugs interest","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addDailyDose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add daily dose information to a drug_exposure table — addDailyDose","text":"input table","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addDailyDose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add daily dose information to a drug_exposure table — addDailyDose","text":"","code":"# \\donttest{ library(DrugUtilisation) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  cdm <- mockDrugUtilisation()  cdm[[\"drug_exposure\"]] %>%   filter(drug_concept_id == 2905077) %>%   addDailyDose(ingredientConceptId = 1125315) #> # Source:   table<dbplyr_003> [3 x 9] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   drug_exposure_id person_id drug_concept_id drug_exposure_start_date #>              <int>     <int>           <dbl> <date>                   #> 1                3         2         2905077 2022-06-06               #> 2               22         7         2905077 2016-07-08               #> 3               26         8         2905077 2012-02-15               #> # ℹ 5 more variables: drug_exposure_end_date <date>, #> #   drug_type_concept_id <dbl>, quantity <dbl>, daily_dose <dbl>, unit <chr> # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addDrugUse.html","id":null,"dir":"Reference","previous_headings":"","what":"Add new columns with drug use related information — addDrugUse","title":"Add new columns with drug use related information — addDrugUse","text":"Add new columns drug use related information","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addDrugUse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add new columns with drug use related information — addDrugUse","text":"","code":"addDrugUse(   cohort,   cdm = attr(cohort, \"cdm_reference\"),   ingredientConceptId,   conceptSet = NULL,   duration = TRUE,   quantity = TRUE,   dose = TRUE,   gapEra = 0,   eraJoinMode = \"zero\",   overlapMode = \"sum\",   sameIndexMode = \"sum\",   imputeDuration = \"none\",   imputeDailyDose = \"none\",   durationRange = c(1, Inf),   dailyDoseRange = c(0, Inf) )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addDrugUse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add new columns with drug use related information — addDrugUse","text":"cohort Cohort cdm cdm cdm_reference created CDMConnector::cdmFromCon ingredientConceptId Ingredient OMOP concept interested study. compulsory input, default value provided. conceptSet List concepts included. NULL descendants ingredient concept id used. duration Whether add duration related columns. quantity Whether add quantity related columns. dose Whether add dose related columns. gapEra Number days two continuous exposures considered era. eraJoinMode two different continuous exposures joined era. four options: \"zero\" exposures joined considering period continuous exposures subject treated daily dose zero. time exposures contributes total exposed time. \"join\" exposures joined considering period continuous exposures subject treated daily dose zero. time exposures contribute total exposed time. \"previous\" exposures joined considering period continuous exposures subject treated daily dose previous subexposure. time exposures contributes total exposed time. \"subsequent\" exposures joined considering period continuous exposures subject treated daily dose subsequent subexposure. time exposures contributes total exposed time. overlapMode overlapping two exposures start day solved inside subexposure. five possible options: \"previous\" considered daily_dose one earliest exposure. \"subsequent\" considered daily_dose one new exposure starts subexposure. \"minimum\" considered daily_dose minimum exposures subexposure. \"maximum\" considered daily_dose maximum exposures subexposure. \"sum\" considered daily_dose sum exposures present subexposure. sameIndexMode overlapping two exposures start day solved inside subexposure. three possible options: \"minimum\" considered daily_dose minimum exposures subexposure. \"maximum\" considered daily_dose maximum exposures subexposure. \"sum\" considered daily_dose sum exposures present subexposure. imputeDuration Whether/duration imputed \"none\", \"median\", \"mean\", \"mode\" number imputeDailyDose Whether/daily_dose imputed \"none\", \"median\", \"mean\", \"mode\" number durationRange Range duration must comprised. numeric vector length two, NAs first value equal smaller second one. must NULL imputeDuration \"none\". NULL restrictions applied. dailyDoseRange Range daily_dose must comprised. numeric vector length two, NAs first value equal smaller second one. must NULL imputeDailyDose \"none\". NULL restrictions applied.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addDrugUse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add new columns with drug use related information — addDrugUse","text":"cohort added columns.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addDrugUse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add new columns with drug use related information — addDrugUse","text":"","code":"# \\donttest{ library(DrugUtilisation) library(CodelistGenerator)  cdm <- mockDrugUtilisation() cdm <- generateDrugUtilisationCohortSet(   cdm, \"dus_cohort\", getDrugIngredientCodes(cdm, name = \"acetaminophen\") ) cdm[[\"dus_cohort\"]] %>%   addDrugUse(cdm, ingredientConceptId = 1125315) #> # Source:   table<dbplyr_042> [?? x 13] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date duration #>                   <dbl>      <int> <date>            <date>             <dbl> #>  1                    1          7 2018-05-21        2018-07-20            61 #>  2                    1          2 2022-06-06        2022-06-07             2 #>  3                    1          7 2016-02-01        2017-10-04           612 #>  4                    1          3 2009-04-18        2009-11-07           204 #>  5                    1          6 1991-01-28        1991-09-17           233 #>  6                    1          4 2021-05-05        2021-12-15           225 #>  7                    1          5 2014-07-28        2019-11-20          1942 #>  8                    1          9 2022-09-11        2022-11-09            60 #>  9                    1          2 2022-05-24        2022-06-02            10 #> 10                    1          1 2021-02-25        2021-03-11            15 #> # ℹ more rows #> # ℹ 8 more variables: number_exposures <dbl>, cumulative_quantity <dbl>, #> #   initial_quantity <dbl>, impute_duration_percentage <dbl>, #> #   number_eras <dbl>, impute_daily_dose_percentage <dbl>, #> #   initial_daily_dose_milligram <dbl>, cumulative_dose_milligram <dbl> # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addIndication.html","id":null,"dir":"Reference","previous_headings":"","what":"Get indication for a target cohort — addIndication","title":"Get indication for a target cohort — addIndication","text":"Get indication target cohort","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addIndication.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get indication for a target cohort — addIndication","text":"","code":"addIndication(   x,   cdm = attr(x, \"cdm_reference\"),   indicationCohortName,   indicationGap = 0,   unknownIndicationTable = NULL,   indicationDate = \"cohort_start_date\" )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addIndication.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get indication for a target cohort — addIndication","text":"x Table cdm cdm cdm reference created using CDMConnector indicationCohortName Name indication cohort table indicationGap Gap event indication unknownIndicationTable Tables search unknown indications indicationDate Date indication","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addIndication.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get indication for a target cohort — addIndication","text":"cohort adding indications","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addIndication.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get indication for a target cohort — addIndication","text":"","code":"# \\donttest{ library(DrugUtilisation) library(CodelistGenerator)  cdm <- mockDrugUtilisation()  indications <- list(\"headache\" = 378253, \"asthma\" = 317009) cdm <- generateConceptCohortSet(   cdm, indications, \"indication_cohorts\" )  acetaminophen <- getDrugIngredientCodes(cdm, \"acetaminophen\") cdm <- generateDrugUtilisationCohortSet(cdm, \"drug_cohort\", acetaminophen)  cdm[[\"drug_cohort\"]] %>%   addIndication(cdm, \"indication_cohorts\", indicationGap = c(0, 30, 365)) #> # Source:   table<dbplyr_075> [?? x 13] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <dbl>      <int> <date>            <date>          #>  1                    1          2 2022-06-06        2022-06-07      #>  2                    1          7 2018-05-21        2018-07-20      #>  3                    1          2 2022-05-24        2022-06-02      #>  4                    1          1 2021-02-25        2021-03-11      #>  5                    1          4 2021-05-05        2021-12-15      #>  6                    1          5 2014-07-28        2019-11-20      #>  7                    1          9 2022-09-11        2022-11-09      #>  8                    1          3 2009-04-18        2009-11-07      #>  9                    1          6 1991-01-28        1991-09-17      #> 10                    1          7 2016-02-01        2017-10-04      #> # ℹ more rows #> # ℹ 9 more variables: indication_gap_0_asthma <dbl>, #> #   indication_gap_0_headache <dbl>, indication_gap_0_none <dbl>, #> #   indication_gap_30_headache <dbl>, indication_gap_30_asthma <dbl>, #> #   indication_gap_30_none <dbl>, indication_gap_365_asthma <dbl>, #> #   indication_gap_365_headache <dbl>, indication_gap_365_none <dbl> # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addRoute.html","id":null,"dir":"Reference","previous_headings":"","what":"add route column to a table containing drug_exposure information — addRoute","title":"add route column to a table containing drug_exposure information — addRoute","text":"add route column table containing drug_exposure information","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addRoute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add route column to a table containing drug_exposure information — addRoute","text":"","code":"addRoute(drugTable, cdm = attr(drugTable, \"cdm_reference\"))"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addRoute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add route column to a table containing drug_exposure information — addRoute","text":"drugTable Table cdm must contain drug_concept_id cdm 'cdm' object created CDMConnector::cdm_from_con(). must must contain 'concept_relationship' table.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addRoute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add route column to a table containing drug_exposure information — addRoute","text":"adds route current table","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/addRoute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add route column to a table containing drug_exposure information — addRoute","text":"","code":"# \\donttest{ library(DrugUtilisation) library(dplyr)  cdm <- mockDrugUtilisation()  cdm[[\"drug_exposure\"]] %>%   addRoute() #> # Source:   SQL [?? x 8] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>    drug_exposure_id person_id drug_concept_id drug_exposure_start_date #>               <int>     <int>           <dbl> <date>                   #>  1               30         9        43135274 2022-09-11               #>  2               26         8         2905077 2012-02-15               #>  3               34        10         1516978 2004-12-17               #>  4               33        10         1503328 1992-02-27               #>  5               32         9         1516980 2022-07-21               #>  6               21         7         1125360 2016-02-01               #>  7               36        10         1539463 2003-12-24               #>  8               17         5         1539462 2017-08-29               #>  9               23         7        43135274 2017-07-11               #> 10               22         7         2905077 2016-07-08               #> # ℹ more rows #> # ℹ 4 more variables: drug_exposure_end_date <date>, #> #   drug_type_concept_id <dbl>, quantity <dbl>, route <chr> # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/dailyDoseCoverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Check coverage of daily dose computation in a sample of the cdm for selected\nconcept sets and ingredient — dailyDoseCoverage","title":"Check coverage of daily dose computation in a sample of the cdm for selected\nconcept sets and ingredient — dailyDoseCoverage","text":"Check coverage daily dose computation sample cdm selected concept sets ingredient","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/dailyDoseCoverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check coverage of daily dose computation in a sample of the cdm for selected\nconcept sets and ingredient — dailyDoseCoverage","text":"","code":"dailyDoseCoverage(cdm, ingredientConceptId)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/dailyDoseCoverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check coverage of daily dose computation in a sample of the cdm for selected\nconcept sets and ingredient — dailyDoseCoverage","text":"cdm cdm reference created using CDMConnector ingredientConceptId Code indicating ingredient interest","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/dailyDoseCoverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check coverage of daily dose computation in a sample of the cdm for selected\nconcept sets and ingredient — dailyDoseCoverage","text":"function returns information coverage computeDailyDose.R selected ingredients concept sets","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/dailyDoseCoverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check coverage of daily dose computation in a sample of the cdm for selected\nconcept sets and ingredient — dailyDoseCoverage","text":"","code":"# \\donttest{ library(DrugUtilisation)  cdm <- mockDrugUtilisation()  dailyDoseCoverage(cdm, 1125315) #> # A tibble: 73 × 9 #>    group_name      group_level  strata_name strata_level variable variable_level #>    <chr>           <chr>        <chr>       <chr>        <chr>    <chr>          #>  1 ingredient_name acetaminoph… Overall     Overall      number … NA             #>  2 ingredient_name acetaminoph… unit        milligram    number … NA             #>  3 ingredient_name acetaminoph… unit        milligram    daily_d… NA             #>  4 ingredient_name acetaminoph… unit        milligram    daily_d… NA             #>  5 ingredient_name acetaminoph… unit        milligram    daily_d… NA             #>  6 ingredient_name acetaminoph… unit        milligram    daily_d… NA             #>  7 ingredient_name acetaminoph… unit        milligram    daily_d… NA             #>  8 ingredient_name acetaminoph… unit        milligram    daily_d… NA             #>  9 ingredient_name acetaminoph… unit        milligram    daily_d… NA             #> 10 ingredient_name acetaminoph… unit        milligram    daily_d… NA             #> # ℹ 63 more rows #> # ℹ 3 more variables: variable_type <chr>, estimate_type <chr>, estimate <chr> # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateDrugUtilisationCohortSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a cohort of the drug use of a certain list of concepts. — generateDrugUtilisationCohortSet","title":"Generates a cohort of the drug use of a certain list of concepts. — generateDrugUtilisationCohortSet","text":"Generates cohort drug use certain list concepts.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateDrugUtilisationCohortSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a cohort of the drug use of a certain list of concepts. — generateDrugUtilisationCohortSet","text":"","code":"generateDrugUtilisationCohortSet(   cdm,   name,   conceptSet,   durationRange = c(1, Inf),   imputeDuration = \"none\",   gapEra = 0,   priorUseWashout = 0,   priorObservation = 0,   cohortDateRange = as.Date(c(NA, NA)),   limit = \"all\" )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateDrugUtilisationCohortSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a cohort of the drug use of a certain list of concepts. — generateDrugUtilisationCohortSet","text":"cdm cdm_reference object. name Name GeneratedCohortSet conceptSet Named list concept sets. durationRange Range duration must comprised. numeric vector length two, NAs first value equal smaller second one. required imputeDuration = TRUE. NULL restrictions applied. imputeDuration Whether/duration imputed \"none\", \"median\", \"mean\", \"mode\", can count gapEra Number days two continuous exposures considered era. priorUseWashout Prior days without exposure. priorObservation Minimum number days prior observation required incident eras considered. NULL required within observation_period. cohortDateRange Range cohort_start_date cohort_end_date limit Choice summarise exposures. two options: \"\" summarise output summary exposed eras individual. individual can contribute multiple times. \"first\" consider first observable era individual fulfills criteria provided previous parameters. case individual can contribute multiple rows.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateDrugUtilisationCohortSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a cohort of the drug use of a certain list of concepts. — generateDrugUtilisationCohortSet","text":"function returns 'cdm' object created tables references object.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateDrugUtilisationCohortSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a cohort of the drug use of a certain list of concepts. — generateDrugUtilisationCohortSet","text":"","code":"# \\donttest{ library(CodelistGenerator) library(CDMConnector) library(DrugUtilisation)  cdm <- mockDrugUtilisation()  druglist <- getDrugIngredientCodes(cdm, c(\"acetaminophen\", \"metformin\"))  cdm <- generateDrugUtilisationCohortSet(   cdm = cdm,   name = \"drug_cohorts\",   conceptSet = druglist,   priorObservation = 365 )  cdm[[\"drug_cohorts\"]] #> # Source:   table<drug_cohorts> [7 x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1016-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date #>                  <dbl>      <int> <date>            <date>          #> 1                    2          3 2005-06-02        2008-05-08      #> 2                    1          7 2018-05-21        2018-07-20      #> 3                    2          3 1994-02-27        1995-08-16      #> 4                    1          5 2014-07-28        2019-11-20      #> 5                    2         10 1992-02-27        2004-03-07      #> 6                    1          3 2009-04-18        2009-11-07      #> 7                    1          6 1991-01-28        1991-09-17       cohortSet(cdm[[\"drug_cohorts\"]]) #> # A tibble: 2 × 11 #>   cohort_definition_id cohort_name   duration_range_min duration_range_max #>                  <int> <chr>         <chr>              <chr>              #> 1                    1 acetaminophen 1                  Inf                #> 2                    2 metformin     1                  Inf                #> # ℹ 7 more variables: impute_duration <chr>, gap_era <chr>, #> #   prior_use_washout <chr>, prior_observation <chr>, #> #   cohort_date_range_start <chr>, cohort_date_range_end <chr>, limit <chr>  cohortCount(cdm[[\"drug_cohorts\"]]) #> # A tibble: 2 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    2              3               2 #> 2                    1              4               4  cohortAttrition(cdm[[\"drug_cohorts\"]]) #> # A tibble: 14 × 7 #>    cohort_definition_id number_records number_subjects reason_id reason          #>                   <int>          <dbl>           <dbl>     <dbl> <chr>           #>  1                    1             13               9         1 Qualifying ini… #>  2                    1             13               9         2 Duration imput… #>  3                    1             11               9         3 Join eras       #>  4                    1             11               9         4 prior use wash… #>  5                    1              4               4         5 at least 365 p… #>  6                    1              4               4         6 cohort_start_d… #>  7                    2              8               5         1 Qualifying ini… #>  8                    2              8               5         2 Duration imput… #>  9                    2              7               5         3 Join eras       #> 10                    2              7               5         4 prior use wash… #> 11                    2              3               2         5 at least 365 p… #> 12                    2              3               2         6 cohort_start_d… #> 13                    2              3               2         7 cohort_end_dat… #> 14                    1              4               4         7 cohort_end_dat… #> # ℹ 2 more variables: excluded_records <dbl>, excluded_subjects <dbl> # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/indicationToStrata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new variables summarising the data of indication that can be used as\nstratification columns — indicationToStrata","title":"Create new variables summarising the data of indication that can be used as\nstratification columns — indicationToStrata","text":"Create new variables summarising data indication can used stratification columns","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/indicationToStrata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new variables summarising the data of indication that can be used as\nstratification columns — indicationToStrata","text":"","code":"indicationToStrata(   cohort,   indicationVariables = indicationColumns(cohort),   keep = FALSE )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/indicationToStrata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new variables summarising the data of indication that can be used as\nstratification columns — indicationToStrata","text":"cohort cohort cdm indicationVariables Indication variables want join keep Whether keep prior indication variables ","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/indicationToStrata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new variables summarising the data of indication that can be used as\nstratification columns — indicationToStrata","text":"description cohort new variable","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/indicationToStrata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create new variables summarising the data of indication that can be used as\nstratification columns — indicationToStrata","text":"","code":"# \\donttest{ library(DrugUtilisation)  cdm <- mockDrugUtilisation() cdm[[\"cohort1\"]] <- cdm[[\"cohort1\"]] %>%   addIndication(cdm, \"cohort2\") %>%   indicationToStrata() # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/mockDrugUtilisation.html","id":null,"dir":"Reference","previous_headings":"","what":"It creates a mock database for testing drugutilisation package — mockDrugUtilisation","title":"It creates a mock database for testing drugutilisation package — mockDrugUtilisation","text":"creates mock database testing drugutilisation package","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/mockDrugUtilisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"It creates a mock database for testing drugutilisation package — mockDrugUtilisation","text":"","code":"mockDrugUtilisation(   connectionDetails = list(con = DBI::dbConnect(duckdb::duckdb(), \":memory:\"),     writeSchema = \"main\", cdmPrefix = NULL, writePrefix = NULL),   numberIndividuals = 10,   seed = 1,   concept = NULL,   concept_ancestor = NULL,   drug_strength = NULL,   person = NULL,   observation_period = NULL,   drug_exposure = NULL,   condition_occurrence = NULL,   observation = NULL,   concept_relationship = NULL,   extraTables = list(),   ... )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/mockDrugUtilisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"It creates a mock database for testing drugutilisation package — mockDrugUtilisation","text":"connectionDetails Details connection numberIndividuals Number individuals mock cdm seed Seed random numbers concept concept tibble, NULL mock one created concept_ancestor concept_ancestor tibble, NULL mock one created drug_strength drug_strength tibble, NULL mock one created person person tibble, NULL mock one created observation_period observation_period tibble, NULL mock one created drug_exposure drug_exposure tibble, NULL mock one created condition_occurrence condition_occurrence tibble, NULL mock one created observation observation tibble, NULL mock one created concept_relationship concept_relationship tibble, NULL mock one created. extraTables Extra tibbles instantiated cohorts cdm tables ... Cohorts can added cdm reference, cohort1 cohort2 created provided","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/mockDrugUtilisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"It creates a mock database for testing drugutilisation package — mockDrugUtilisation","text":"cdm reference mock tables","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/mockDrugUtilisation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"It creates a mock database for testing drugutilisation package — mockDrugUtilisation","text":"","code":"# \\donttest{ library(DrugUtilisation)  cdm <- mockDrugUtilisation()  cdm #> # OMOP CDM reference (tbl_duckdb_connection) #>  #> Tables: person, observation_period, visit_occurrence, condition_occurrence, drug_exposure, observation, concept, concept_relationship, concept_ancestor, drug_strength, cohort1, cohort2 # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/patternTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a tibble with the patterns from current drug strength table — patternTable","title":"Function to create a tibble with the patterns from current drug strength table — patternTable","text":"Function create tibble patterns current drug strength table","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/patternTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a tibble with the patterns from current drug strength table — patternTable","text":"","code":"patternTable(cdm)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/patternTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a tibble with the patterns from current drug strength table — patternTable","text":"cdm 'cdm' object created CDMConnector::cdm_from_con(). must must contain 'drug_strength' 'concept' tables.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/patternTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a tibble with the patterns from current drug strength table — patternTable","text":"function creates tibble different patterns found table, plus column potentially valid invalid combinations.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/patternTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a tibble with the patterns from current drug strength table — patternTable","text":"","code":"# \\donttest{ library(DrugUtilisation)  cdm <- mockDrugUtilisation()  patternTable(cdm) #> # A tibble: 5 × 12 #>   pattern_id formula_name            validity number_concepts number_ingredients #>        <dbl> <chr>                   <chr>              <dbl>              <dbl> #> 1          9 fixed amount formulati… pattern…               7                  4 #> 2         18 concentration formulat… pattern…               1                  1 #> 3         24 concentration formulat… pattern…               1                  1 #> 4         40 concentration formulat… pattern…               1                  1 #> 5         NA NA                      no patt…               4                  4 #> # ℹ 7 more variables: number_records <dbl>, amount_numeric <dbl>, #> #   amount_unit_concept_id <dbl>, numerator_numeric <dbl>, #> #   numerator_unit_concept_id <dbl>, denominator_numeric <dbl>, #> #   denominator_unit_concept_id <dbl> # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/patternsWithFormula.html","id":null,"dir":"Reference","previous_headings":"","what":"Patterns valid to compute daily dose with the associated formula. — patternsWithFormula","title":"Patterns valid to compute daily dose with the associated formula. — patternsWithFormula","text":"Patterns valid compute daily dose associated formula.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/patternsWithFormula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Patterns valid to compute daily dose with the associated formula. — patternsWithFormula","text":"","code":"patternsWithFormula"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/patternsWithFormula.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Patterns valid to compute daily dose with the associated formula. — patternsWithFormula","text":"data frame eight variables: pattern_id, amount, amount_unit, numerator, numerator_unit, denominator, denominator_unit, formula_name formula.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/readConceptList.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concept ids from a provided path to json files — readConceptList","title":"Get concept ids from a provided path to json files — readConceptList","text":"Get concept ids provided path json files","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/readConceptList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concept ids from a provided path to json files — readConceptList","text":"","code":"readConceptList(path, cdm)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/readConceptList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concept ids from a provided path to json files — readConceptList","text":"path path file folder containing jsons read cdm cdm reference created CDMConnector","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/readConceptList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concept ids from a provided path to json files — readConceptList","text":"list concept_ids respective concept_ids interest","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/readConceptList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get concept ids from a provided path to json files — readConceptList","text":"","code":"# \\donttest{ library(DrugUtilisation)  cdm <- mockDrugUtilisation()  codelist <- readConceptList(   path = system.file(\"concepts\",package=\"DrugUtilisation\"), cdm = cdm ) # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. CDMConnector generateConceptCohortSet PatientProfiles summariseCharacteristics, summariseLargeScaleCharacteristics","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/stratifyByUnit.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to stratify a conceptSet by unit — stratifyByUnit","title":"Function to stratify a conceptSet by unit — stratifyByUnit","text":"Function stratify conceptSet unit","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/stratifyByUnit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to stratify a conceptSet by unit — stratifyByUnit","text":"","code":"stratifyByUnit(conceptSet, cdm, ingredientConceptId)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/stratifyByUnit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to stratify a conceptSet by unit — stratifyByUnit","text":"conceptSet List concept sets cdm cdm reference ingredientConceptId ConceptId refers ingredient","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/stratifyByUnit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to stratify a conceptSet by unit — stratifyByUnit","text":"conceptSet stratified unit","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/stratifyByUnit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to stratify a conceptSet by unit — stratifyByUnit","text":"","code":"# \\donttest{ library(DrugUtilisation) library(CodelistGenerator)  cdm <- mockDrugUtilisation()  codelist <- getDrugIngredientCodes(cdm, \"acetaminophen\")  codelistStratified <- stratifyByUnit(codelist, cdm, 1125315)  codelistStratified #> $`acetaminophen unit: milligram` #> [1]  1125360  2905077 43135274 #>  # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseCharacteristicsFromCodelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise a cohort from multipl codelist and windows — summariseCharacteristicsFromCodelist","title":"Summarise a cohort from multipl codelist and windows — summariseCharacteristicsFromCodelist","text":"Summarise cohort multipl codelist windows","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseCharacteristicsFromCodelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise a cohort from multipl codelist and windows — summariseCharacteristicsFromCodelist","text":"","code":"summariseCharacteristicsFromCodelist(   cohort,   cdm,   conceptSet,   strata = list(),   window = list(c(-Inf, -366), c(-365, -31), c(-30, -1), c(0, 0), c(1, 30), c(31, 365),     c(366, Inf)),   overlap = TRUE,   minCellCount = 5 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseCharacteristicsFromCodelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise a cohort from multipl codelist and windows — summariseCharacteristicsFromCodelist","text":"cohort Cohort summarise cdm cdm_reference conceptSet list concept sets strata Stratification list window Windows characterize overlap Whether consider episodes (overlap = TRUE) incident (overlap = FALSE) minCellCount Minimum cell counts","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseCharacteristicsFromCodelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise a cohort from multipl codelist and windows — summariseCharacteristicsFromCodelist","text":"SummarisedResults object contains characterization","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseCharacteristicsFromCodelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise a cohort from multipl codelist and windows — summariseCharacteristicsFromCodelist","text":"","code":"# \\donttest{ library(DrugUtilisation) library(CodelistGenerator)  cdm <- mockDrugUtilisation()  conceptSet <- list(   \"acetaminophen\" = c(1125315, 1125360, 2905077, 43135274),   \"group A\" = c(     3665501, 378253, 317009, 761948, 1539403, 1503327, 1516980, 4141052,     4313306   ) ) summariseCharacteristicsFromCodelist(   cdm[[\"cohort1\"]], cdm, conceptSet,   window = list(c(-365, -1), c(0, 0), c(1, 365)) ) #> → measurement table not present in the cdm #> → procedure_occurrence table not present in the cdm #> # A tibble: 24 × 12 #>    group_name  group_level strata_name strata_level window_name variable      #>    <chr>       <chr>       <chr>       <chr>        <chr>       <chr>         #>  1 Cohort name cohort_3    Overall     Overall      -365 to -1  group A       #>  2 Cohort name cohort_3    Overall     Overall      -365 to -1  acetaminophen #>  3 Cohort name cohort_2    Overall     Overall      -365 to -1  group A       #>  4 Cohort name cohort_2    Overall     Overall      -365 to -1  acetaminophen #>  5 Cohort name cohort_3    Overall     Overall      -365 to -1  denominator   #>  6 Cohort name cohort_2    Overall     Overall      -365 to -1  denominator   #>  7 Cohort name cohort_1    Overall     Overall      -365 to -1  group A       #>  8 Cohort name cohort_1    Overall     Overall      -365 to -1  acetaminophen #>  9 Cohort name cohort_1    Overall     Overall      -365 to -1  denominator   #> 10 Cohort name cohort_3    Overall     Overall      0 to 0      acetaminophen #> # ℹ 14 more rows #> # ℹ 6 more variables: variable_type <chr>, variable_level <chr>, #> #   estimate_type <chr>, estimate <chr>, cdm_name <chr>, result_type <chr> # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseDrugUse.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is used to summarise the dose table over multiple cohorts. — summariseDrugUse","title":"This function is used to summarise the dose table over multiple cohorts. — summariseDrugUse","text":"function used summarise dose table multiple cohorts.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseDrugUse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is used to summarise the dose table over multiple cohorts. — summariseDrugUse","text":"","code":"summariseDrugUse(   cohort,   cdm = attr(cohort, \"cdm_reference\"),   strata = list(),   drugUseEstimates = c(\"min\", \"q05\", \"q25\", \"median\", \"q75\", \"q95\", \"max\", \"mean\", \"sd\",     \"missing\"),   minCellCount = 5 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseDrugUse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is used to summarise the dose table over multiple cohorts. — summariseDrugUse","text":"cohort Cohort drug use variables strata cdm cdm_reference generated CDMConnector strata Stratification list drugUseEstimates Estimates want columns minCellCount number counts supressed","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseDrugUse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function is used to summarise the dose table over multiple cohorts. — summariseDrugUse","text":"summary drug use stratified cohort_name strata_name","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseDrugUse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function is used to summarise the dose table over multiple cohorts. — summariseDrugUse","text":"","code":"# \\donttest{ library(DrugUtilisation) library(PatientProfiles) library(CodelistGenerator)  cdm <- mockDrugUtilisation() cdm <- generateDrugUtilisationCohortSet(   cdm, \"dus_cohort\", getDrugIngredientCodes(cdm, \"acetaminophen\") ) cdm[[\"dus_cohort\"]] <- cdm[[\"dus_cohort\"]] %>%   addDrugUse(cdm, 1125315) result <- summariseDrugUse(cdm[[\"dus_cohort\"]], cdm) print(result) #> # A tibble: 101 × 11 #>    group_name  group_level   strata_name strata_level variable    variable_level #>    <chr>       <chr>         <chr>       <chr>        <chr>       <chr>          #>  1 cohort_name acetaminophen Overall     Overall      number sub… NA             #>  2 cohort_name acetaminophen Overall     Overall      number rec… NA             #>  3 cohort_name acetaminophen Overall     Overall      duration    NA             #>  4 cohort_name acetaminophen Overall     Overall      duration    NA             #>  5 cohort_name acetaminophen Overall     Overall      duration    NA             #>  6 cohort_name acetaminophen Overall     Overall      duration    NA             #>  7 cohort_name acetaminophen Overall     Overall      duration    NA             #>  8 cohort_name acetaminophen Overall     Overall      duration    NA             #>  9 cohort_name acetaminophen Overall     Overall      duration    NA             #> 10 cohort_name acetaminophen Overall     Overall      duration    NA             #> # ℹ 91 more rows #> # ℹ 5 more variables: variable_type <chr>, estimate_type <chr>, estimate <chr>, #> #   cdm_name <chr>, result_type <chr>  cdm[[\"dus_cohort\"]] <- cdm[[\"dus_cohort\"]] %>%   addSex(cdm) %>%   addAge(cdm, ageGroup = list(\"<40\" = c(0, 30), \">40\" = c(40, 150)))  summariseDrugUse(   cdm[[\"dus_cohort\"]], cdm, strata = list(    \"age_group\" = \"age_group\", \"sex\" = \"sex\",    \"age_group and sex\" = c(\"age_group\", \"sex\")   ) ) #> # A tibble: 1,010 × 11 #>    group_name  group_level   strata_name strata_level variable    variable_level #>    <chr>       <chr>         <chr>       <chr>        <chr>       <chr>          #>  1 cohort_name acetaminophen Overall     Overall      number sub… NA             #>  2 cohort_name acetaminophen Overall     Overall      number rec… NA             #>  3 cohort_name acetaminophen Overall     Overall      duration    NA             #>  4 cohort_name acetaminophen Overall     Overall      duration    NA             #>  5 cohort_name acetaminophen Overall     Overall      duration    NA             #>  6 cohort_name acetaminophen Overall     Overall      duration    NA             #>  7 cohort_name acetaminophen Overall     Overall      duration    NA             #>  8 cohort_name acetaminophen Overall     Overall      duration    NA             #>  9 cohort_name acetaminophen Overall     Overall      duration    NA             #> 10 cohort_name acetaminophen Overall     Overall      duration    NA             #> # ℹ 1,000 more rows #> # ℹ 5 more variables: variable_type <chr>, estimate_type <chr>, estimate <chr>, #> #   cdm_name <chr>, result_type <chr> # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseIndication.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is used to summarise the indication table over multiple\ncohorts. — summariseIndication","title":"This function is used to summarise the indication table over multiple\ncohorts. — summariseIndication","text":"function used summarise indication table multiple cohorts.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseIndication.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is used to summarise the indication table over multiple\ncohorts. — summariseIndication","text":"","code":"summariseIndication(   cohort,   cdm = attr(cohort, \"cdm_reference\"),   strata = list(),   minCellCount = 5 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseIndication.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is used to summarise the indication table over multiple\ncohorts. — summariseIndication","text":"cohort Cohort indications strata cdm cdm_reference created CDMConnector strata Stratification list minCellCount Minimum counts group can . Cohorts less counts value obscured.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseIndication.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function is used to summarise the indication table over multiple\ncohorts. — summariseIndication","text":"Tibble 4 columns: cohort_definition_id, variable, estimate value. one row cohort, variable cohort combination.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseIndication.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function is used to summarise the indication table over multiple\ncohorts. — summariseIndication","text":"","code":"# \\donttest{ library(DrugUtilisation) library(PatientProfiles) library(CodelistGenerator)  cdm <- mockDrugUtilisation() indications <- list(\"headache\" = 378253, \"asthma\" = 317009) cdm <- generateConceptCohortSet(cdm, indications, \"indication_cohorts\") acetaminophen <- getDrugIngredientCodes(cdm, \"acetaminophen\") cdm <- generateDrugUtilisationCohortSet(cdm, \"drug_cohort\", acetaminophen) cdm[[\"drug_cohort\"]] <- cdm[[\"drug_cohort\"]] %>%   addIndication(cdm, \"indication_cohorts\", indicationGap = c(0, 30, 365))  summariseIndication(cdm[[\"drug_cohort\"]], cdm) #> # A tibble: 20 × 11 #>    group_name  group_level   strata_name strata_level variable    variable_level #>    <chr>       <chr>         <chr>       <chr>        <chr>       <chr>          #>  1 cohort_name acetaminophen Overall     Overall      number sub… NA             #>  2 cohort_name acetaminophen Overall     Overall      number rec… NA             #>  3 cohort_name acetaminophen Overall     Overall      Indication… Asthma         #>  4 cohort_name acetaminophen Overall     Overall      Indication… Asthma         #>  5 cohort_name acetaminophen Overall     Overall      Indication… Headache       #>  6 cohort_name acetaminophen Overall     Overall      Indication… Headache       #>  7 cohort_name acetaminophen Overall     Overall      Indication… None           #>  8 cohort_name acetaminophen Overall     Overall      Indication… None           #>  9 cohort_name acetaminophen Overall     Overall      Indication… Headache       #> 10 cohort_name acetaminophen Overall     Overall      Indication… Headache       #> 11 cohort_name acetaminophen Overall     Overall      Indication… Asthma         #> 12 cohort_name acetaminophen Overall     Overall      Indication… Asthma         #> 13 cohort_name acetaminophen Overall     Overall      Indication… None           #> 14 cohort_name acetaminophen Overall     Overall      Indication… None           #> 15 cohort_name acetaminophen Overall     Overall      Indication… Asthma         #> 16 cohort_name acetaminophen Overall     Overall      Indication… Asthma         #> 17 cohort_name acetaminophen Overall     Overall      Indication… Headache       #> 18 cohort_name acetaminophen Overall     Overall      Indication… Headache       #> 19 cohort_name acetaminophen Overall     Overall      Indication… None           #> 20 cohort_name acetaminophen Overall     Overall      Indication… None           #> # ℹ 5 more variables: variable_type <chr>, estimate_type <chr>, estimate <chr>, #> #   cdm_name <chr>, result_type <chr>  cdm[[\"drug_cohort\"]] <- cdm[[\"drug_cohort\"]] %>%   addAge(cdm, ageGroup = list(\"<40\" = c(0, 39), \">=40\" = c(40, 150))) %>%   addSex(cdm)  summariseIndication(   cdm[[\"drug_cohort\"]], cdm, strata = list(     \"age_group\" = \"age_group\", \"age_group and sex\" = c(\"age_group\", \"sex\")   ) ) #> # A tibble: 120 × 11 #>    group_name  group_level   strata_name strata_level variable    variable_level #>    <chr>       <chr>         <chr>       <chr>        <chr>       <chr>          #>  1 cohort_name acetaminophen Overall     Overall      number sub… NA             #>  2 cohort_name acetaminophen Overall     Overall      number rec… NA             #>  3 cohort_name acetaminophen Overall     Overall      Indication… Asthma         #>  4 cohort_name acetaminophen Overall     Overall      Indication… Asthma         #>  5 cohort_name acetaminophen Overall     Overall      Indication… Headache       #>  6 cohort_name acetaminophen Overall     Overall      Indication… Headache       #>  7 cohort_name acetaminophen Overall     Overall      Indication… None           #>  8 cohort_name acetaminophen Overall     Overall      Indication… None           #>  9 cohort_name acetaminophen Overall     Overall      Indication… Headache       #> 10 cohort_name acetaminophen Overall     Overall      Indication… Headache       #> # ℹ 110 more rows #> # ℹ 5 more variables: variable_type <chr>, estimate_type <chr>, estimate <chr>, #> #   cdm_name <chr>, result_type <chr> # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseTreatment.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is used to summarise the dose table over multiple cohorts. — summariseTreatment","title":"This function is used to summarise the dose table over multiple cohorts. — summariseTreatment","text":"function used summarise dose table multiple cohorts.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseTreatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is used to summarise the dose table over multiple cohorts. — summariseTreatment","text":"","code":"summariseTreatment(   cohort,   strata = list(),   window,   treatmentCohortName = NULL,   treatmentCohortId = NULL,   treatmentConceptSet = NULL,   combination = FALSE,   minCellCount = 5 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseTreatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is used to summarise the dose table over multiple cohorts. — summariseTreatment","text":"cohort Cohort drug use variables strata. strata Stratification list. window Window summarise treatments. treatmentCohortName Name cohort cdm contains interest treatments. treatmentCohortId Cohort definition id interest treatmentCohortName. treatmentConceptSet Concept set list summarise. combination Whether include combination treatments. minCellCount number counts suppressed.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/summariseTreatment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function is used to summarise the dose table over multiple cohorts. — summariseTreatment","text":"summary drug use stratified cohort_name strata_name","code":""}]
